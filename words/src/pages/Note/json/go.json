[
    {
        "indexKey": 871,
        "lid": "04f0694b-5c5d-4522-8de3-2d4fbe638442",
        "word": "<p>其他的<strong>检查代码</strong>工具</p><p><br></p><p>1、go install golang.org/x/lint/golint@latest</p><p>golint ./...</p><p><br></p><p>2、go vet ./...</p><p><br></p><p>3、golangci-lint run</p><p><br></p><p><br></p>",
        "tran": "",
        "en": "<p>其他的<strong>检查代码</strong>工具</p><p><br></p><p>1、go install golang.org/x/lint/golint@latest</p><p>golint ./...</p><p><br></p><p>2、go vet ./...</p><p><br></p><p>3、golangci-lint run</p><p><br></p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 874,
        "lid": "08af5919-f3f8-44b6-843a-928735287e18",
        "word": "<p><strong>选择特定版本来进行编译</strong></p><p><br></p><p>To install a secondary Go environment.</p><p><br></p><p>go 1.15.2 wants to try out version 1.15.6,do it like follow.</p><p><br></p><p>$ go get golang.org/dl/go.1.15.6</p><p>$ go1.15.6 download</p><p><br></p><p>$ go1.15.6 build</p><p><br></p><p>用完后删除：</p><p>$ go1.15.6 env GOROOT</p><p>/Users/gobook/sdk/go1.15.6</p><p>$ rm -rf $(go1.15.6 env GOROOT)</p><p>$ rm $(go env GOPATH)/bin/go1.15.6</p><p><br></p><p><br></p>",
        "tran": "<p>The go versions to choose:</p><p>https://golang.org/dl</p><p><br></p><p>The Linux to update:</p><p>$ mv /usr/local/go /usr/local/old-go</p><p>$ tar -C /usr/local -xzf go1.15.2.linux-amd64.tar.gz</p><p>$ rm -rf /usr/local/old-go</p>",
        "en": "<p><strong>选择特定版本来进行编译</strong></p><p><br></p><p>To install a secondary Go environment.</p><p><br></p><p>go 1.15.2 wants to try out version 1.15.6,do it like follow.</p><p><br></p><p>$ go get golang.org/dl/go.1.15.6</p><p>$ go1.15.6 download</p><p><br></p><p>$ go1.15.6 build</p><p><br></p><p>用完后删除：</p><p>$ go1.15.6 env GOROOT</p><p>/Users/gobook/sdk/go1.15.6</p><p>$ rm -rf $(go1.15.6 env GOROOT)</p><p>$ rm $(go env GOPATH)/bin/go1.15.6</p><p><br></p><p><br></p>",
        "cn": "<p>The go versions to choose:</p><p>https://golang.org/dl</p><p><br></p><p>The Linux to update:</p><p>$ mv /usr/local/go /usr/local/old-go</p><p>$ tar -C /usr/local -xzf go1.15.2.linux-amd64.tar.gz</p><p>$ rm -rf /usr/local/old-go</p>"
    },
    {
        "indexKey": 870,
        "lid": "1e600c79-db5e-4d63-a81d-6a0d7473ac76",
        "word": "<p><strong>Fortmatting Code</strong></p><p><br></p><p>大多数语言在代码的布局方式上都允许很大的灵活性。 Go 则不然。</p><p><br></p><p>1、如果大括号与开始的声明或命令不再同一行，则是一个语法错误；</p><p><br></p><p>2、格式化工具：</p><p>\t2-1、go fmt；</p><p>\t2-2、goimports</p><p>\t\t\tgo install golang.org/x/</p><p>tools/cmd/goimports@latest.</p><p>\t\t\tgoimports -l -w .</p><p>\t\t\t-l flag：找出错误格式的到sonsole; -w：修复错误的格式； . ：当前目录和它的子目录。</p><p><br></p><p>\t\t\t</p>",
        "tran": "",
        "en": "<p><strong>Fortmatting Code</strong></p><p><br></p><p>大多数语言在代码的布局方式上都允许很大的灵活性。 Go 则不然。</p><p><br></p><p>1、如果大括号与开始的声明或命令不再同一行，则是一个语法错误；</p><p><br></p><p>2、格式化工具：</p><p>\t2-1、go fmt；</p><p>\t2-2、goimports</p><p>\t\t\tgo install golang.org/x/</p><p>tools/cmd/goimports@latest.</p><p>\t\t\tgoimports -l -w .</p><p>\t\t\t-l flag：找出错误格式的到sonsole; -w：修复错误的格式； . ：当前目录和它的子目录。</p><p><br></p><p>\t\t\t</p>",
        "cn": ""
    },
    {
        "indexKey": 875,
        "lid": "24998ad9-3ed4-4a68-b902-1b5c089bd4b2",
        "word": "<p><strong>其他系列命令</strong></p><p><br></p><p># Lint 整个项目</p><p>$ golint ./…</p><p><br></p><p>go mod </p><p><br></p><p><span style=\"color: rgb(64, 64, 64);\">开启方式：</span></p><p>Windows中，在环境变量中添加变量即可，变量名为 GO111MODULE ，变量值可设置为 on、off、auto。</p><p>Linux中，只要在 /etc/profile 中添加 export GO111MODULE=on 或 export GO111MODULE=off 或 export GO111MODULE=auto。然后执行 source /etc/profile 刷新即可。</p><p><br></p>",
        "tran": "<p>$ go mod download path@version</p><p>$ go mod graph</p><p>$ go init path</p><p>$ go mod tidy</p><p>$ <span style=\"color: rgb(24, 24, 24);\">go list -m all</span></p><p><span style=\"color: rgb(24, 24, 24);\">$  go clean -modcache</span></p><p><br></p>",
        "en": "<p><strong>其他系列命令</strong></p><p><br></p><p># Lint 整个项目</p><p>$ golint ./…</p><p><br></p><p>go mod </p><p><br></p><p><span style=\"color: rgb(64, 64, 64);\">开启方式：</span></p><p>Windows中，在环境变量中添加变量即可，变量名为 GO111MODULE ，变量值可设置为 on、off、auto。</p><p>Linux中，只要在 /etc/profile 中添加 export GO111MODULE=on 或 export GO111MODULE=off 或 export GO111MODULE=auto。然后执行 source /etc/profile 刷新即可。</p><p><br></p>",
        "cn": "<p>$ go mod download path@version</p><p>$ go mod graph</p><p>$ go init path</p><p>$ go mod tidy</p><p>$ <span style=\"color: rgb(24, 24, 24);\">go list -m all</span></p><p><span style=\"color: rgb(24, 24, 24);\">$  go clean -modcache</span></p><p><br></p>"
    },
    {
        "indexKey": 869,
        "lid": "415e973b-cfe4-47dc-9e0c-823f601e4564",
        "word": "<p><strong>go Command</strong></p><p><br></p><p>go run and go build</p><p><br></p><p>go run hello.go</p><p><br></p><p>go build hello.go</p><p>go build -o hello_world hello.go</p>",
        "tran": "<p><strong>Getting Third-Party Go Tools</strong></p><p>This will save at the $GOPATH</p><p><br></p><p>$ go install github.com/rakyll/hey@latest</p><p><br></p><p>update the version</p><p>go install github.com/rakyll/hey@latest</p>",
        "en": "<p><strong>go Command</strong></p><p><br></p><p>go run and go build</p><p><br></p><p>go run hello.go</p><p><br></p><p>go build hello.go</p><p>go build -o hello_world hello.go</p>",
        "cn": "<p><strong>Getting Third-Party Go Tools</strong></p><p>This will save at the $GOPATH</p><p><br></p><p>$ go install github.com/rakyll/hey@latest</p><p><br></p><p>update the version</p><p>go install github.com/rakyll/hey@latest</p>"
    },
    {
        "indexKey": 873,
        "lid": "5b962e12-6186-4539-8126-fdf7f30b3e87",
        "word": "<p><strong>Makefiles</strong></p><p><br></p><p>内容如下：包含三个结构，先执行、自己。</p><p><br></p><p><span style=\"color: rgb(156, 220, 254);\">.DEFAULT_GOAL</span> := build</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">fmt</span>:</p><p>    go fmt ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:fmt</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">lint</span>: fmt</p><p>    golint ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:lint</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">vet</span>: fmt</p><p>    go vet ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:vet</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">build</span>: vet</p><p>    go build hello.go</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:build</p>",
        "tran": "<p>use</p><p><strong>make</strong></p><p><br></p><p>You should see the following output:</p><p>go fmt ./...</p><p>go vet ./...</p><p>go build hello.go</p><p><br></p><p><strong>The window to install make</strong></p><p>https://chocolatey.org/</p><p>choco install make</p><p><br></p>",
        "en": "<p><strong>Makefiles</strong></p><p><br></p><p>内容如下：包含三个结构，先执行、自己。</p><p><br></p><p><span style=\"color: rgb(156, 220, 254);\">.DEFAULT_GOAL</span> := build</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">fmt</span>:</p><p>    go fmt ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:fmt</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">lint</span>: fmt</p><p>    golint ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:lint</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">vet</span>: fmt</p><p>    go vet ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:vet</p><p><br></p><p><span style=\"color: rgb(220, 220, 170);\">build</span>: vet</p><p>    go build hello.go</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:build</p>",
        "cn": "<p>use</p><p><strong>make</strong></p><p><br></p><p>You should see the following output:</p><p>go fmt ./...</p><p>go vet ./...</p><p>go build hello.go</p><p><br></p><p><strong>The window to install make</strong></p><p>https://chocolatey.org/</p><p>choco install make</p><p><br></p>"
    },
    {
        "indexKey": 872,
        "lid": "636e14ff-ebab-4b01-aac5-64a3cc0ea8ca",
        "word": "<p><strong>vs code</strong></p><p><br></p><p>extensions:</p><p>https://marketplace.visualstudio.com/items?itemName=golang.go</p><p>https://github.com/go-delve/delve/tree/master?tab=readme-ov-file</p>",
        "tran": "<p>Debugger:</p><p>1、安装 Go 扩展；</p><p>2、Ctrl + Shift + P，输入 go:install/Update Tools，把相应的都选择进行安装；</p><p>3、安装好依赖之后，Run  --&gt;  Start Debugging 可以进行调试。</p>",
        "en": "<p><strong>vs code</strong></p><p><br></p><p>extensions:</p><p>https://marketplace.visualstudio.com/items?itemName=golang.go</p><p>https://github.com/go-delve/delve/tree/master?tab=readme-ov-file</p>",
        "cn": "<p>Debugger:</p><p>1、安装 Go 扩展；</p><p>2、Ctrl + Shift + P，输入 go:install/Update Tools，把相应的都选择进行安装；</p><p>3、安装好依赖之后，Run  --&gt;  Start Debugging 可以进行调试。</p>"
    },
    {
        "indexKey": 876,
        "lid": "98902f30-280b-440e-945a-a46e5014c53c",
        "word": "<p><strong>The Zero Value</strong></p><p><br></p><p>Assigns a default zero value to any variable that is declared but not assigned a value.</p>",
        "tran": "",
        "en": "<p><strong>The Zero Value</strong></p><p><br></p><p>Assigns a default zero value to any variable that is declared but not assigned a value.</p>",
        "cn": ""
    },
    {
        "indexKey": 868,
        "lid": "d84e882c-265c-483c-bb87-78d9b7730dbb",
        "word": "<p><strong>$GOPATH and  its subfolder</strong></p><p><br></p><p>$GOPATH</p><p>\t\tbin</p><p>\t\tsrc</p><p>\t\tpkg</p><p><br></p><p>go install</p><p><br></p><p>something sometimes need to fix is use to add the following to .profile.</p><p><br></p><p>export GOPATH=$HOME/go</p><p>export PATH=$PATH:$GOPATH/bin</p><p><br></p><p>On windows</p><p>setx GOPATH %USERPROFILE%\\go</p><p>setx path \"%path%;%USERPROFILE%\\bin\"</p>",
        "tran": "",
        "en": "<p><strong>$GOPATH and  its subfolder</strong></p><p><br></p><p>$GOPATH</p><p>\t\tbin</p><p>\t\tsrc</p><p>\t\tpkg</p><p><br></p><p>go install</p><p><br></p><p>something sometimes need to fix is use to add the following to .profile.</p><p><br></p><p>export GOPATH=$HOME/go</p><p>export PATH=$PATH:$GOPATH/bin</p><p><br></p><p>On windows</p><p>setx GOPATH %USERPROFILE%\\go</p><p>setx path \"%path%;%USERPROFILE%\\bin\"</p>",
        "cn": ""
    },
    {
        "indexKey": 867,
        "lid": "f109f2b6-e721-444e-b8f0-4a1e34792d28",
        "word": "<p><strong>Installing the Go Tools</strong></p><p><br></p><p>$ tar -C /usr/local -xzf go1.15.2.linux-amd64.tar.gz</p><p><br></p><p>$ echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; $HOME/.profile</p><p><br></p><p>$ source $HOME/.profile</p><p><br></p><p>//Test</p><p>$ go version</p>",
        "tran": "",
        "en": "<p><strong>Installing the Go Tools</strong></p><p><br></p><p>$ tar -C /usr/local -xzf go1.15.2.linux-amd64.tar.gz</p><p><br></p><p>$ echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; $HOME/.profile</p><p><br></p><p>$ source $HOME/.profile</p><p><br></p><p>//Test</p><p>$ go version</p>",
        "cn": ""
    },
    {
        "indexKey": 878,
        "lid": "005fd105-cab1-46e1-8ba1-268d252040fa",
        "word": "<p><strong>Floating point literals</strong></p><p><br></p><p>有指数类型的，如(6.03e23)</p><p>也包含不同进制</p><p>可以使用下划线来提高阅读效率</p>",
        "tran": "<p><strong>Rune literals</strong></p><p>用单引号包裹，不能使用双引号</p><p><br></p><p>nicode characters ('a')</p><p>8-bit octal numbers('\\141')</p><p>8-bit hexadecimal numbers ('\\x61')</p><p>16-bit hexadecimal numbers('\\u0061')</p><p>32-bit Unicode numbers ('\\U00000061')</p><p>newline ('\\n')</p><p>tab('\\t')</p><p>single quote ('\\'')</p><p>double quote ('\\\"')</p><p>backslash ('\\\\')</p>",
        "en": "<p><strong>Floating point literals</strong></p><p><br></p><p>有指数类型的，如(6.03e23)</p><p>也包含不同进制</p><p>可以使用下划线来提高阅读效率</p>",
        "cn": "<p><strong>Rune literals</strong></p><p>用单引号包裹，不能使用双引号</p><p><br></p><p>nicode characters ('a')</p><p>8-bit octal numbers('\\141')</p><p>8-bit hexadecimal numbers ('\\x61')</p><p>16-bit hexadecimal numbers('\\u0061')</p><p>32-bit Unicode numbers ('\\U00000061')</p><p>newline ('\\n')</p><p>tab('\\t')</p><p>single quote ('\\'')</p><p>double quote ('\\\"')</p><p>backslash ('\\\\')</p>"
    },
    {
        "indexKey": 880,
        "lid": "16dc8a61-32d5-49ca-a6d5-f4a66d3b7141",
        "word": "<p><strong>Booleans</strong></p><p>one of two values: true or false.</p><p><span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">flag</span> <span style=\"color: rgb(86, 156, 214);\">bool</span> <span style=\"color: rgb(124, 166, 104);\">// no value assigned, set to false</span></p><p><span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">isAwesome</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">true</span></p>",
        "tran": "",
        "en": "<p><strong>Booleans</strong></p><p>one of two values: true or false.</p><p><span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">flag</span> <span style=\"color: rgb(86, 156, 214);\">bool</span> <span style=\"color: rgb(124, 166, 104);\">// no value assigned, set to false</span></p><p><span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">isAwesome</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">true</span></p>",
        "cn": ""
    },
    {
        "indexKey": 877,
        "lid": "1d0341e5-e855-4722-b0b3-4b1787621a11",
        "word": "<p><strong>Literals</strong></p><p><br></p><p>Refer to number, character, or string.</p><p><br></p><p><strong><em><u>Integer literals</u></em></strong></p><p>0b for binary(base two)</p><p>0o for octal&nbsp;(base eight)</p><p>0x for hexadecimal (base sixteen)</p><p>You can use either or upper- or lowercase letters for the prefix.</p><p>前面有一个 0 ，没有其它 b/o/x，代表的是八进制，慎用。</p><p><strong>下划线</strong>，可以用作千分号的分隔线，可以在每个数字之间加上，为了便于阅读；其他进制的也自然可以使用。</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Literals</strong></p><p><br></p><p>Refer to number, character, or string.</p><p><br></p><p><strong><em><u>Integer literals</u></em></strong></p><p>0b for binary(base two)</p><p>0o for octal&nbsp;(base eight)</p><p>0x for hexadecimal (base sixteen)</p><p>You can use either or upper- or lowercase letters for the prefix.</p><p>前面有一个 0 ，没有其它 b/o/x，代表的是八进制，慎用。</p><p><strong>下划线</strong>，可以用作千分号的分隔线，可以在每个数字之间加上，为了便于阅读；其他进制的也自然可以使用。</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 882,
        "lid": "21c5fb4c-adba-4006-a520-c637417b65dd",
        "word": "<p><strong>Integer operators</strong></p><p><br></p><p>1、+=, -=,*=, /=, and %=.&nbsp;</p><p>2、==, !=, &gt;, &gt;=, &lt;, and &lt;=.</p><p>3、&lt;&lt;,&gt;&gt;,&amp;,|,^,&amp;^.</p><p>4、&amp;=, |=, ^=, &amp;^=, &lt;&lt;=, and &gt;&gt;=.</p>",
        "tran": "",
        "en": "<p><strong>Integer operators</strong></p><p><br></p><p>1、+=, -=,*=, /=, and %=.&nbsp;</p><p>2、==, !=, &gt;, &gt;=, &lt;, and &lt;=.</p><p>3、&lt;&lt;,&gt;&gt;,&amp;,|,^,&amp;^.</p><p>4、&amp;=, |=, ^=, &amp;^=, &lt;&lt;=, and &gt;&gt;=.</p>",
        "cn": ""
    },
    {
        "indexKey": 890,
        "lid": "75122a48-ce5b-4af9-afd3-ae4c5fef56ae",
        "word": "<p><strong>Capacity</strong></p><p><br></p><p>1、每个 slice 都有一个 容量（capacity），该容量比 len 要大，当 slice 到达容量后调用append，旧的就会被复制到一个新的slice，新的值就会被添加到末尾，就的数据则被垃圾回收；少于 1024 的时候，slice加倍、其他的则增加 25%</p><p>2、cap  查看容量</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> []<span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">40</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">50</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>}</p><p>//以下是输出</p><p>[] 0 0</p><p>[10] 1 1</p><p>[10 20] 2 2</p><p>[10 20 30] 3 4</p><p>[10 20 30 40] 4 4</p><p>[10 20 30 40 50] 5 8</p><p><br></p>",
        "tran": "<p><strong>make</strong></p><p>make的优势，相比上面的，他能够指定 type、length、和 capacity(可选的)，上述的不能创建空的，且有长度的切片</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>) <span style=\"color: rgb(124, 166, 104);\">// int slice with a length of 5 and a capacity of 5.x[0] through x[4] are all initialized to 0.</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>) // x 为 [0 0 0 0 0 10]</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>) <span style=\"color: rgb(124, 166, 104);\">// int slice with a length of 5 and a capacity of 10.</span></p><p><br></p><p>make的参数中，如果 capacity 的大小比 len 的小，则会导致编译错误</p>",
        "en": "<p><strong>Capacity</strong></p><p><br></p><p>1、每个 slice 都有一个 容量（capacity），该容量比 len 要大，当 slice 到达容量后调用append，旧的就会被复制到一个新的slice，新的值就会被添加到末尾，就的数据则被垃圾回收；少于 1024 的时候，slice加倍、其他的则增加 25%</p><p>2、cap  查看容量</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> []<span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">40</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">50</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>}</p><p>//以下是输出</p><p>[] 0 0</p><p>[10] 1 1</p><p>[10 20] 2 2</p><p>[10 20 30] 3 4</p><p>[10 20 30 40] 4 4</p><p>[10 20 30 40 50] 5 8</p><p><br></p>",
        "cn": "<p><strong>make</strong></p><p>make的优势，相比上面的，他能够指定 type、length、和 capacity(可选的)，上述的不能创建空的，且有长度的切片</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>) <span style=\"color: rgb(124, 166, 104);\">// int slice with a length of 5 and a capacity of 5.x[0] through x[4] are all initialized to 0.</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>) // x 为 [0 0 0 0 0 10]</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>) <span style=\"color: rgb(124, 166, 104);\">// int slice with a length of 5 and a capacity of 10.</span></p><p><br></p><p>make的参数中，如果 capacity 的大小比 len 的小，则会导致编译错误</p>"
    },
    {
        "indexKey": 891,
        "lid": "8e64bcda-6e59-4074-b1ba-d6a7bee36b3e",
        "word": "<p><strong>Declaring Your Slice</strong></p><p>slice的定义，应该尽量避免它的容量的增长</p><p><br></p><p>1、如果您有一些起始值，或者切片的值不会改变，那么切片字面形式是一个不错的选择</p><p>    <span style=\"color: rgb(156, 220, 254);\">data</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>} <span style=\"color: rgb(124, 166, 104);\">// numbers we appreciate</span></p><p>2、使用make，来定义一个长度为 0 ，且有一定容量的 slice ，也是一个很好的选择；</p><p><br></p><p><br></p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Declaring Your Slice</strong></p><p>slice的定义，应该尽量避免它的容量的增长</p><p><br></p><p>1、如果您有一些起始值，或者切片的值不会改变，那么切片字面形式是一个不错的选择</p><p>    <span style=\"color: rgb(156, 220, 254);\">data</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>} <span style=\"color: rgb(124, 166, 104);\">// numbers we appreciate</span></p><p>2、使用make，来定义一个长度为 0 ，且有一定容量的 slice ，也是一个很好的选择；</p><p><br></p><p><br></p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 881,
        "lid": "a0d7ee45-6ffa-4585-9da6-1e99fce9d265",
        "word": "<p><strong>Integer types</strong></p><p>int8 \t\t\t–128 to 127</p><p>int16 \t\t–32768 to 32767</p><p>int32 \t\t–2147483648 to 2147483647</p><p>int64 \t\t–9223372036854775808 to 9223372036854775807</p><p>uint8 \t\t0 to 255</p><p>uint16 \t\t0 to 65536</p><p>uint32 \t\t0 to 4294967295</p><p>uint64 \t\t0 to 18446744073709551615</p><p><br></p>",
        "tran": "<p><strong>The special integer types</strong></p><p>1、A byte is an alias for uint8:it is legal to assign, compare, or perform mathematical operations between a byte and a uint8.</p><p>2、int 类型，在32位Cpu电脑上，他被赋值为 int32，在64位电脑上，它被赋值为 int64，正因为如此，int类型的比较、赋值、或数值运算，同样的代码在不同电脑可能会导致报错；</p><p>3、数值类型的定义要根据实际需求来进行定义，默认情况下，使用 int 类型。</p>",
        "en": "<p><strong>Integer types</strong></p><p>int8 \t\t\t–128 to 127</p><p>int16 \t\t–32768 to 32767</p><p>int32 \t\t–2147483648 to 2147483647</p><p>int64 \t\t–9223372036854775808 to 9223372036854775807</p><p>uint8 \t\t0 to 255</p><p>uint16 \t\t0 to 65536</p><p>uint32 \t\t0 to 4294967295</p><p>uint64 \t\t0 to 18446744073709551615</p><p><br></p>",
        "cn": "<p><strong>The special integer types</strong></p><p>1、A byte is an alias for uint8:it is legal to assign, compare, or perform mathematical operations between a byte and a uint8.</p><p>2、int 类型，在32位Cpu电脑上，他被赋值为 int32，在64位电脑上，它被赋值为 int64，正因为如此，int类型的比较、赋值、或数值运算，同样的代码在不同电脑可能会导致报错；</p><p>3、数值类型的定义要根据实际需求来进行定义，默认情况下，使用 int 类型。</p>"
    },
    {
        "indexKey": 886,
        "lid": "add9830a-0827-4d18-8455-a3852a068484",
        "word": "<p><strong>Using const</strong></p><p>const，也就只能保证在编译阶段，变量不被修改。</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(86, 156, 214);\">int64</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> (</p><p>    <span style=\"color: rgb(156, 220, 254);\">idKey</span>   <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"id\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">nameKey</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"name\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">20</span> <span style=\"color: rgb(212, 212, 212);\">*</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"bye\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>}</p><p><br></p><p>// 运行的时候，报错</p><p>./test.go:19:2: cannot assign to x (constant 10 of type int64)</p><p>./test.go:20:2: cannot assign to y (untyped string constant \"hello\")</p><p><br></p>",
        "tran": "<p><strong>untype </strong></p><p><br></p><p>\t1、如果需要为一个变量经常赋值不同类型，定义为 untype 的类型，如此增加了灵活性；</p>",
        "en": "<p><strong>Using const</strong></p><p>const，也就只能保证在编译阶段，变量不被修改。</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(86, 156, 214);\">int64</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> (</p><p>    <span style=\"color: rgb(156, 220, 254);\">idKey</span>   <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"id\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">nameKey</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"name\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">20</span> <span style=\"color: rgb(212, 212, 212);\">*</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"bye\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>}</p><p><br></p><p>// 运行的时候，报错</p><p>./test.go:19:2: cannot assign to x (constant 10 of type int64)</p><p>./test.go:20:2: cannot assign to y (untyped string constant \"hello\")</p><p><br></p>",
        "cn": "<p><strong>untype </strong></p><p><br></p><p>\t1、如果需要为一个变量经常赋值不同类型，定义为 untype 的类型，如此增加了灵活性；</p>"
    },
    {
        "indexKey": 879,
        "lid": "afa170d5-2cad-4c41-b44b-8483328a2a7a",
        "word": "<p><strong>string literal&nbsp;</strong></p><p><br></p><p>使用双引号(\"Greetings and Salutations\" 或 \"Greetings and\\n\\\"Salutations\\\"\")</p><p>原始字符串，保留了换行等(</p><p>`Greetings and</p><p>\"Salutations\"`</p><p>)</p><p><br></p><p><br></p>",
        "tran": "<p><strong>其他注意</strong></p><p><br></p><p>1、两个不同字节大小的数字不能够相加；</p><p>2、浮点数可以和整形的进行相加；</p><p>3、不能把 string 的变量分配给数字类型的变量；反过来也一样；</p><p>4、float类型不能分配给 int;</p><p>5、没有显式定义类型的变量，它们的类型都为 literal 类型；</p>",
        "en": "<p><strong>string literal&nbsp;</strong></p><p><br></p><p>使用双引号(\"Greetings and Salutations\" 或 \"Greetings and\\n\\\"Salutations\\\"\")</p><p>原始字符串，保留了换行等(</p><p>`Greetings and</p><p>\"Salutations\"`</p><p>)</p><p><br></p><p><br></p>",
        "cn": "<p><strong>其他注意</strong></p><p><br></p><p>1、两个不同字节大小的数字不能够相加；</p><p>2、浮点数可以和整形的进行相加；</p><p>3、不能把 string 的变量分配给数字类型的变量；反过来也一样；</p><p>4、float类型不能分配给 int;</p><p>5、没有显式定义类型的变量，它们的类型都为 literal 类型；</p>"
    },
    {
        "indexKey": 889,
        "lid": "b27994ca-e9a5-4072-a1a1-d58aadb4ce7e",
        "word": "<p><strong>Slices</strong></p><p><br></p><p>1、和数组不同，size 不是数据的一部分，可根据我们的需要来增长 slice；</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>} <span style=\"color: rgb(124, 166, 104);\">// Using […] makes an array. Using [] makes a slice.</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>: <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>: <span style=\"color: rgb(181, 206, 168);\">100</span>, <span style=\"color: rgb(181, 206, 168);\">15</span>}  <span style=\"color: rgb(124, 166, 104);\">// [1, 0, 0, 0, 0, 4, 6, 0, 0, 0, 100,</span></p><p>    <span style=\"color: rgb(181, 206, 168);\">15</span>]</p><p>var x [][]int</p><p>2、slice 的默认值</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> []<span style=\"color: rgb(86, 156, 214);\">int // x 的默认值为 nil，nil表示一个变量缺少值，nil 可以和任何值比较，也可赋值给任何值；</span></p><p>3、slice 之间不能比较，但是可以和nil比较</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(86, 156, 214);\">nil</span>) <span style=\"color: rgb(124, 166, 104);\">// prints true</span></p><p>4、built-in functions for slice</p><p>\t4-1、len\twork for array、slice、strings、maps;</p><p>\t4-2、append</p><p>    \t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> []<span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    \t<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>)  // append 返回一个同样类型的 slice</p><p>\t\t<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>)</p><p>\t\t//下面是新组一个 slice，一定要赋值，不然会编译报错</p><p>    \t<span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>, <span style=\"color: rgb(181, 206, 168);\">40</span>}</p><p>    \t<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span><span style=\"color: rgb(212, 212, 212);\">...</span>)</p><p>Go，中，传入值到函数中，其实知识传递了值的 副本</p><p><br></p><p><br></p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Slices</strong></p><p><br></p><p>1、和数组不同，size 不是数据的一部分，可根据我们的需要来增长 slice；</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>} <span style=\"color: rgb(124, 166, 104);\">// Using […] makes an array. Using [] makes a slice.</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>: <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>: <span style=\"color: rgb(181, 206, 168);\">100</span>, <span style=\"color: rgb(181, 206, 168);\">15</span>}  <span style=\"color: rgb(124, 166, 104);\">// [1, 0, 0, 0, 0, 4, 6, 0, 0, 0, 100,</span></p><p>    <span style=\"color: rgb(181, 206, 168);\">15</span>]</p><p>var x [][]int</p><p>2、slice 的默认值</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> []<span style=\"color: rgb(86, 156, 214);\">int // x 的默认值为 nil，nil表示一个变量缺少值，nil 可以和任何值比较，也可赋值给任何值；</span></p><p>3、slice 之间不能比较，但是可以和nil比较</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(86, 156, 214);\">nil</span>) <span style=\"color: rgb(124, 166, 104);\">// prints true</span></p><p>4、built-in functions for slice</p><p>\t4-1、len\twork for array、slice、strings、maps;</p><p>\t4-2、append</p><p>    \t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> []<span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    \t<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>)  // append 返回一个同样类型的 slice</p><p>\t\t<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>)</p><p>\t\t//下面是新组一个 slice，一定要赋值，不然会编译报错</p><p>    \t<span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>, <span style=\"color: rgb(181, 206, 168);\">40</span>}</p><p>    \t<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span><span style=\"color: rgb(212, 212, 212);\">...</span>)</p><p>Go，中，传入值到函数中，其实知识传递了值的 副本</p><p><br></p><p><br></p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 884,
        "lid": "b6ebd89f-f98d-4d68-89b7-4a5bef17125b",
        "word": "<p><strong>Strings and Runes</strong></p><p><br></p><p>1、The zero value for a string is the empty string.&nbsp;</p><p>2、compare use == ,!= ;</p><p>3、ordering with &gt;,&gt;=,&lt;=;</p><p>4、concatenated use +;</p><p>5、字符串被赋值后不能改变其内容；</p><p>6、rune type 是 int32 类型的别称；</p>",
        "tran": "<p><strong>Explicit Type Conversion</strong></p><p><br></p><p>1、Go语言没有隐式转换，这是为了方便阅读以及代码清晰；</p><p>2、不同大小的整形也需要转换成同样大小才能交换；</p><p>3、Go中，没有任何其他类型可以隐式或显式地转换为 bool，如果要转换，则需要使用比较运算，如(==, !=, &gt;, &lt;, &lt;=, or &gt;=)等；</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(86, 156, 214);\">float64</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">30.2</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(86, 156, 214);\">float64</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">float64</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>) <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(156, 220, 254);\">y</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(86, 156, 214);\">int</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Print</span>(<span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Print</span>(<span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>}</p><p><br></p><p>result</p><p>40.2   40</p>",
        "en": "<p><strong>Strings and Runes</strong></p><p><br></p><p>1、The zero value for a string is the empty string.&nbsp;</p><p>2、compare use == ,!= ;</p><p>3、ordering with &gt;,&gt;=,&lt;=;</p><p>4、concatenated use +;</p><p>5、字符串被赋值后不能改变其内容；</p><p>6、rune type 是 int32 类型的别称；</p>",
        "cn": "<p><strong>Explicit Type Conversion</strong></p><p><br></p><p>1、Go语言没有隐式转换，这是为了方便阅读以及代码清晰；</p><p>2、不同大小的整形也需要转换成同样大小才能交换；</p><p>3、Go中，没有任何其他类型可以隐式或显式地转换为 bool，如果要转换，则需要使用比较运算，如(==, !=, &gt;, &lt;, &lt;=, or &gt;=)等；</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(86, 156, 214);\">float64</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">30.2</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(86, 156, 214);\">float64</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">float64</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>) <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(156, 220, 254);\">y</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(86, 156, 214);\">int</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Print</span>(<span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Print</span>(<span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>}</p><p><br></p><p>result</p><p>40.2   40</p>"
    },
    {
        "indexKey": 885,
        "lid": "ba03cc76-fb7f-4eb2-b36f-9ec7c3ec0767",
        "word": "<p><strong>Variable declaration</strong></p><p><br></p><p>1、Uses the var keyword, an explicit type, and an assignment.</p><p>var x int = 10</p><p>2、由于整数文字（literal）的默认类型是 int，因此以下将 x 声明为 int 类型的变量</p><p>var x = 10</p><p>3、默认为 0 的情况</p><p>var x int</p><p>var x, y int  // 多个为 0 的同样类型</p><p>4、多个同样类型</p><p>var x, y int = 10, 20</p><p>5、不同类型</p><p>var x, y = 10, \"hello\"</p><p>6、很多的定义，用于定义多个的变量</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> (</p><p>        <span style=\"color: rgb(156, 220, 254);\">x</span>    <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">y</span>        <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">20</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">z</span>    <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">d</span>, <span style=\"color: rgb(156, 220, 254);\">e</span>     <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">40</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">f</span>, <span style=\"color: rgb(156, 220, 254);\">g</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    )</p><p>7、短定义，用于函数内部，在包级别使用不合法 :=</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\" // 可以重新赋值定义已存在的变量</span></p><p>8、 := 的注意点</p><p>\t\t8-1、定义为 0 的时候，不要用 x := 0;，需要用 var x int</p><p>\t\t8-2、有类型交换的时候，避免使用；</p><p>\t\t8-3、:= 会创造新变量以及重新赋值，同名情况下，使用 var 可以避免一些混淆；</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Variable declaration</strong></p><p><br></p><p>1、Uses the var keyword, an explicit type, and an assignment.</p><p>var x int = 10</p><p>2、由于整数文字（literal）的默认类型是 int，因此以下将 x 声明为 int 类型的变量</p><p>var x = 10</p><p>3、默认为 0 的情况</p><p>var x int</p><p>var x, y int  // 多个为 0 的同样类型</p><p>4、多个同样类型</p><p>var x, y int = 10, 20</p><p>5、不同类型</p><p>var x, y = 10, \"hello\"</p><p>6、很多的定义，用于定义多个的变量</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> (</p><p>        <span style=\"color: rgb(156, 220, 254);\">x</span>    <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">y</span>        <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">20</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">z</span>    <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">d</span>, <span style=\"color: rgb(156, 220, 254);\">e</span>     <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">40</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">f</span>, <span style=\"color: rgb(156, 220, 254);\">g</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    )</p><p>7、短定义，用于函数内部，在包级别使用不合法 :=</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\" // 可以重新赋值定义已存在的变量</span></p><p>8、 := 的注意点</p><p>\t\t8-1、定义为 0 的时候，不要用 x := 0;，需要用 var x int</p><p>\t\t8-2、有类型交换的时候，避免使用；</p><p>\t\t8-3、:= 会创造新变量以及重新赋值，同名情况下，使用 var 可以避免一些混淆；</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 888,
        "lid": "bf593c7e-35bb-4002-98e2-397162718782",
        "word": "<p><strong>composite types</strong></p><p><br></p><p>arrays, slices, maps, and structs</p>",
        "tran": "<p><strong>Arrays</strong></p><p><br></p><p>1、specify the size of the array and the type of the elements</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> [<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int  // x[0] x[1] x[2]  都被默认初始化为 0 </span></p><p>2、have initial values</p><p>\t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>}</p><p>3、间隔性初始化</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(181, 206, 168);\">12</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>: <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>: <span style=\"color: rgb(181, 206, 168);\">100</span>, <span style=\"color: rgb(181, 206, 168);\">15</span>}</p><p>// x 的值为 [1, 0, 0, 0, 0, 4, 6, 0, 0, 0,</p><p>100, 15] 5: 表示放空到第五个，10: 表示放空到第十个；</p><p>4、当使用 literal 来初始化一个 array的时候，可以使用 ... 来代替</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(212, 212, 212);\">...</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>}</p><p>5、可以使用 != 、 == 来比较 array</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(212, 212, 212);\">...</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>}</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(156, 220, 254);\">y</span>) <span style=\"color: rgb(124, 166, 104);\">// prints true</span></p><p>}</p><p>6、多维数组</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> [<span style=\"color: rgb(181, 206, 168);\">2</span>][<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int  // 长度为2，元素长度为3且int类型</span></p><p>7、数组的读取，不能超出尾部的内容，也不能使用负索引；</p><p>8、获取长度，数组的 size 大小也被看作数组的一部分</p><p>fmt.Println(len(x))</p><p>9、数组的大小不能转换，所以不同大小的数组不能进行变量赋值分配、也无法将不同大小的数组分配到同一变量；</p><p>10、因为数组长度固定，在实际中不要随意使用，除非是知道固定长度的，而且不同长度的数组又不能随意 赋值分配 ，它的存在，仅为后续的 slice 切片提供存储。</p>",
        "en": "<p><strong>composite types</strong></p><p><br></p><p>arrays, slices, maps, and structs</p>",
        "cn": "<p><strong>Arrays</strong></p><p><br></p><p>1、specify the size of the array and the type of the elements</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> [<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int  // x[0] x[1] x[2]  都被默认初始化为 0 </span></p><p>2、have initial values</p><p>\t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>}</p><p>3、间隔性初始化</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(181, 206, 168);\">12</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>: <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>: <span style=\"color: rgb(181, 206, 168);\">100</span>, <span style=\"color: rgb(181, 206, 168);\">15</span>}</p><p>// x 的值为 [1, 0, 0, 0, 0, 4, 6, 0, 0, 0,</p><p>100, 15] 5: 表示放空到第五个，10: 表示放空到第十个；</p><p>4、当使用 literal 来初始化一个 array的时候，可以使用 ... 来代替</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(212, 212, 212);\">...</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">20</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>}</p><p>5、可以使用 != 、 == 来比较 array</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(212, 212, 212);\">...</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>}</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> [<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(156, 220, 254);\">y</span>) <span style=\"color: rgb(124, 166, 104);\">// prints true</span></p><p>}</p><p>6、多维数组</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> [<span style=\"color: rgb(181, 206, 168);\">2</span>][<span style=\"color: rgb(181, 206, 168);\">3</span>]<span style=\"color: rgb(86, 156, 214);\">int  // 长度为2，元素长度为3且int类型</span></p><p>7、数组的读取，不能超出尾部的内容，也不能使用负索引；</p><p>8、获取长度，数组的 size 大小也被看作数组的一部分</p><p>fmt.Println(len(x))</p><p>9、数组的大小不能转换，所以不同大小的数组不能进行变量赋值分配、也无法将不同大小的数组分配到同一变量；</p><p>10、因为数组长度固定，在实际中不要随意使用，除非是知道固定长度的，而且不同长度的数组又不能随意 赋值分配 ，它的存在，仅为后续的 slice 切片提供存储。</p>"
    },
    {
        "indexKey": 883,
        "lid": "cd84b649-3c56-4da5-a1bb-e67a429ba722",
        "word": "<p><strong>Floating point types</strong></p><p><br></p><p>float32\t\t3.40282346638528859811704183484516925440e+38  to  1.401298464324817070923729583289916131280e-45</p><p>float64\t\t1.797693134862315708145274237317043567981e+308  to  4.940656458412465441765687928682213723651e-324</p><p><br></p><p>1、The default type is float64.</p><p>2、float32仅有6位或7位小数精度；</p><p>3、float point 类型点数不精准，在科学方面运用是有缺陷的；</p><p>3、你可以使用标准的数学运算符来使用floats，除了 % 符号；</p><p>4、一个float类型除以0，结果为 +Inf 或 -Inf(正无穷 或 负无穷);</p><p>5、设置为 0 的float类型除以0，结果为 NaN(非数字)；</p><p>6、float类型的比较，使用 == 或 != 会导致结果不正确，需要定义一个方差来进行比较；</p><p><br></p>",
        "tran": "<p><strong>Complex types</strong></p><p><br></p><p>complex128：使用两个 untyped 常量或literals组合而来；</p><p>complex64：两个 float32 组合而来；</p><p>complex64：一个 float32，另外一个是 常量 或 literals 组合而来；</p><p>complex128：其他的类型组合；</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(206, 145, 120);\">\"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">complex</span>(<span style=\"color: rgb(181, 206, 168);\">2.5</span>, <span style=\"color: rgb(181, 206, 168);\">3.1</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">complex</span>(<span style=\"color: rgb(181, 206, 168);\">10.2</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">-</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">*</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">/</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">real</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">imag</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">cmplx</span>.<span style=\"color: rgb(220, 220, 170);\">Abs</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>}</p><p><br></p><p>(12.7+5.1i)</p><p>(-7.699999999999999+1.1i)</p><p>(19.3+36.62i)</p><p>(0.2934098482043688+0.24639022584228065i)</p><p>2.5</p><p>3.1</p><p>3.982461550347975</p>",
        "en": "<p><strong>Floating point types</strong></p><p><br></p><p>float32\t\t3.40282346638528859811704183484516925440e+38  to  1.401298464324817070923729583289916131280e-45</p><p>float64\t\t1.797693134862315708145274237317043567981e+308  to  4.940656458412465441765687928682213723651e-324</p><p><br></p><p>1、The default type is float64.</p><p>2、float32仅有6位或7位小数精度；</p><p>3、float point 类型点数不精准，在科学方面运用是有缺陷的；</p><p>3、你可以使用标准的数学运算符来使用floats，除了 % 符号；</p><p>4、一个float类型除以0，结果为 +Inf 或 -Inf(正无穷 或 负无穷);</p><p>5、设置为 0 的float类型除以0，结果为 NaN(非数字)；</p><p>6、float类型的比较，使用 == 或 != 会导致结果不正确，需要定义一个方差来进行比较；</p><p><br></p>",
        "cn": "<p><strong>Complex types</strong></p><p><br></p><p>complex128：使用两个 untyped 常量或literals组合而来；</p><p>complex64：两个 float32 组合而来；</p><p>complex64：一个 float32，另外一个是 常量 或 literals 组合而来；</p><p>complex128：其他的类型组合；</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(206, 145, 120);\">\"math/cmplx\"</span></p><p>)</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">complex</span>(<span style=\"color: rgb(181, 206, 168);\">2.5</span>, <span style=\"color: rgb(181, 206, 168);\">3.1</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">complex</span>(<span style=\"color: rgb(181, 206, 168);\">10.2</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">-</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">*</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">/</span> <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">real</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">imag</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">cmplx</span>.<span style=\"color: rgb(220, 220, 170);\">Abs</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>))</p><p>}</p><p><br></p><p>(12.7+5.1i)</p><p>(-7.699999999999999+1.1i)</p><p>(19.3+36.62i)</p><p>(0.2934098482043688+0.24639022584228065i)</p><p>2.5</p><p>3.1</p><p>3.982461550347975</p>"
    },
    {
        "indexKey": 892,
        "lid": "f6a909e4-9c92-4842-95e4-d17ea79a5d34",
        "word": "<p><strong>Slicing Slices</strong></p><p><br></p><p>1、用 : 分开，遵循 闭--- 开 原则</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:<span style=\"color: rgb(181, 206, 168);\">3</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">e</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"d:\"</span>, <span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"e:\"</span>, <span style=\"color: rgb(156, 220, 254);\">e</span>)</p><p>}</p><p><br></p><p>// 输出</p><p>[] 0 0</p><p>[10] 1 1</p><p>[10 20] 2 2</p><p>[10 20 30] 3 4</p><p>[10 20 30 40] 4 4</p><p>[10 20 30 40 50] 5 8</p><p><br></p><p><strong>slicing slice 的值是共享内存，出来的值并不是复制出来，切片的切片改变，源数据也会变</strong></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">20</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span>[<span style=\"color: rgb(181, 206, 168);\">0</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>}</p><p><br></p><p>// output</p><p>x: [10 20 30 4]</p><p>y: [10 20]</p><p>z: [20 30 4]</p>",
        "tran": "<p><strong>append 引发的内存共享</strong></p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>}</p><p>// output</p><p>4 4</p><p>x: [1 2 30 4]</p><p>y: [1 2 30]</p>",
        "en": "<p><strong>Slicing Slices</strong></p><p><br></p><p>1、用 : 分开，遵循 闭--- 开 原则</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:<span style=\"color: rgb(181, 206, 168);\">3</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">e</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"d:\"</span>, <span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"e:\"</span>, <span style=\"color: rgb(156, 220, 254);\">e</span>)</p><p>}</p><p><br></p><p>// 输出</p><p>[] 0 0</p><p>[10] 1 1</p><p>[10 20] 2 2</p><p>[10 20 30] 3 4</p><p>[10 20 30 40] 4 4</p><p>[10 20 30 40 50] 5 8</p><p><br></p><p><strong>slicing slice 的值是共享内存，出来的值并不是复制出来，切片的切片改变，源数据也会变</strong></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">20</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span>[<span style=\"color: rgb(181, 206, 168);\">0</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>}</p><p><br></p><p>// output</p><p>x: [10 20 30 4]</p><p>y: [10 20]</p><p>z: [20 30 4]</p>",
        "cn": "<p><strong>append 引发的内存共享</strong></p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>), <span style=\"color: rgb(220, 220, 170);\">cap</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">append</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(181, 206, 168);\">30</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>}</p><p>// output</p><p>4 4</p><p>x: [1 2 30 4]</p><p>y: [1 2 30]</p>"
    },
    {
        "indexKey": 887,
        "lid": "fd3fab94-91d3-4af4-ac66-d40fbdfed8ad",
        "word": "<p><strong>变量命名</strong></p><p><br></p><p>1、字母或下划线开头；</p><p>2、可以包含数字、下划线、字母；</p><p>3、方法的命名，第一个字母大写的，可以被外部包获取；</p><p>4、使用范围越小的变量，其名称越短（如：循环中的 i）;</p><p>5、使用英语字母的首字母来定义；</p>",
        "tran": "",
        "en": "<p><strong>变量命名</strong></p><p><br></p><p>1、字母或下划线开头；</p><p>2、可以包含数字、下划线、字母；</p><p>3、方法的命名，第一个字母大写的，可以被外部包获取；</p><p>4、使用范围越小的变量，其名称越短（如：循环中的 i）;</p><p>5、使用英语字母的首字母来定义；</p>",
        "cn": ""
    },
    {
        "indexKey": 894,
        "lid": "0236e68a-787e-4288-9bb2-ce3f27914f9a",
        "word": "<p><strong>Converting Arrays to Slices</strong></p><p>// 也会共享内存</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> [<span style=\"color: rgb(181, 206, 168);\">4</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">2</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">0</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>}</p><p>// output</p><p>x: [10 6 7 8]</p><p>y: [10 6]</p><p>z: [7 8]</p><p><br></p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Converting Arrays to Slices</strong></p><p>// 也会共享内存</p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> [<span style=\"color: rgb(181, 206, 168);\">4</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">2</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">0</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>}</p><p>// output</p><p>x: [10 6 7 8]</p><p>y: [10 6]</p><p>z: [7 8]</p><p><br></p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 907,
        "lid": "3507d2f1-bf90-41b1-96c1-e02a6573302a",
        "word": "<p><strong>Choosing Between if and switch</strong></p><p>大量的条件下，用switch，便于更好阅读和维护，其他的用 if 吧</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Choosing Between if and switch</strong></p><p>大量的条件下，用switch，便于更好阅读和维护，其他的用 if 吧</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 901,
        "lid": "3c773bfc-b9b5-4c9f-b7e7-72c213700158",
        "word": "<p><strong>Shadowing Variables</strong></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>        <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">5</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>//out</p><p>10</p><p>5</p><p>10</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">20 // := ，也仅仅在统计 block 中才会覆盖</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>//out</p><p>5 20</p><p>10</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(206, 145, 120);\">\"oops\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">fmt</span>)</p><p>// out</p><p>fmt.Println undefined (type string has no field or method Println)</p>",
        "tran": "",
        "en": "<p><strong>Shadowing Variables</strong></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>        <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">5</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>//out</p><p>10</p><p>5</p><p>10</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">20 // := ，也仅仅在统计 block 中才会覆盖</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>//out</p><p>5 20</p><p>10</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(206, 145, 120);\">\"oops\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">fmt</span>)</p><p>// out</p><p>fmt.Println undefined (type string has no field or method Println)</p>",
        "cn": ""
    },
    {
        "indexKey": 902,
        "lid": "6093cdea-4d1e-4e27-b15b-1538052b51df",
        "word": "<p><strong>Detecting Shadowed Variables</strong></p><p>用于检测有没有shadowed变量</p><p><br></p><p>$ go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest</p><p><br></p><p>Makefile</p><p><span style=\"color: rgb(220, 220, 170);\">vet</span>:</p><p>    go vet ./...</p><p>    shadow ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:vet</p>",
        "tran": "<p><strong>The Universe Block</strong></p><p>These are in the universe block.</p><p>1、the built-in types (like int and string)；</p><p>2、constants (like true and false)；</p><p>3、functions (like make or close)&nbsp;；</p><p>4、nil;</p><p><br></p><p>// 更改 true 的影响</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(86, 156, 214);\">true</span>)</p><p>    <span style=\"color: rgb(86, 156, 214);\">true</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(86, 156, 214);\">true</span>)</p><p>//out</p><p>true</p><p>10</p>",
        "en": "<p><strong>Detecting Shadowed Variables</strong></p><p>用于检测有没有shadowed变量</p><p><br></p><p>$ go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest</p><p><br></p><p>Makefile</p><p><span style=\"color: rgb(220, 220, 170);\">vet</span>:</p><p>    go vet ./...</p><p>    shadow ./...</p><p><span style=\"color: rgb(220, 220, 170);\">.PHONY</span>:vet</p>",
        "cn": "<p><strong>The Universe Block</strong></p><p>These are in the universe block.</p><p>1、the built-in types (like int and string)；</p><p>2、constants (like true and false)；</p><p>3、functions (like make or close)&nbsp;；</p><p>4、nil;</p><p><br></p><p>// 更改 true 的影响</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(86, 156, 214);\">true</span>)</p><p>    <span style=\"color: rgb(86, 156, 214);\">true</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(86, 156, 214);\">true</span>)</p><p>//out</p><p>true</p><p>10</p>"
    },
    {
        "indexKey": 897,
        "lid": "6595130d-64a4-4ce2-a35b-62ef76c60531",
        "word": "<p><strong>Maps</strong></p><p><br></p><p>1、定义</p><p>\t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">nilMap</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int  // nil  length为0 ，不能读写</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{} <span style=\"color: rgb(124, 166, 104);\">// 一个 empty map，可以进行读写</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">teams</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>][]<span style=\"color: rgb(86, 156, 214);\">string</span>{ <span style=\"color: rgb(124, 166, 104);\">// 非空 map</span></p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Orcas\"</span>:   []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"Fred\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Ralph\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Bijou\"</span>},</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>:   []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"Sarah\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Peter\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Billie\"</span>},</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>: []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"Waldo\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Raul\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Ze\"</span>},</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">ages</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>(<span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">int</span>][]<span style=\"color: rgb(86, 156, 214);\">string</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>) <span style=\"color: rgb(124, 166, 104);\">// size 为 10 的 map</span></p><p><br></p><p>2、map 的特点</p><p>\t2-1、能够自动增长；</p><p>\t2-2、能使用make来初始化开始大小；</p><p>\t2-3、len 可以算出 size；</p><p>\t2-4、zero value for a map is nil；</p><p>\t2-5、map可以和nil作比较，但是不能使用 == 、 != 来判断是否含有某个 key;</p><p>\t2-6、map 的 key 值不能是 comparable type；</p><p>\t</p><p>3、map的读写</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{}</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Orcas\"</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">2</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Orcas\"</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>]<span style=\"color: rgb(212, 212, 212);\">++</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">3</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>])</p><p>//out</p><p>1</p><p>0</p><p>1</p><p>3</p><p><br></p><p>4、map中的逗号习俗 comma ok idiom&nbsp;，the scond value returned is a bool.It is usually named ok.If ok is true,the key is present in the map.</p><p>    <span style=\"color: rgb(156, 220, 254);\">m</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>: <span style=\"color: rgb(181, 206, 168);\">5</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"world\"</span>: <span style=\"color: rgb(181, 206, 168);\">0</span>,</p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">m</span>[<span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">m</span>[<span style=\"color: rgb(206, 145, 120);\">\"world\"</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">m</span>[<span style=\"color: rgb(206, 145, 120);\">\"goodbye\"</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span>)</p><p>// out</p><p>5 true</p><p>0 true</p><p>0 false</p><p><br></p><p>5、deleting from map</p><p>    <span style=\"color: rgb(156, 220, 254);\">m</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>: <span style=\"color: rgb(181, 206, 168);\">5</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"world\"</span>: <span style=\"color: rgb(181, 206, 168);\">10</span>,</p><p>    }</p><p>    <span style=\"color: rgb(220, 220, 170);\">delete</span>(<span style=\"color: rgb(156, 220, 254);\">m</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>)</p><p><br></p><p>6、using maps as sets</p><p>    <span style=\"color: rgb(156, 220, 254);\">intSet</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">int</span>]<span style=\"color: rgb(86, 156, 214);\">bool</span>{}</p><p>    <span style=\"color: rgb(156, 220, 254);\">vals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">9</span>, <span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">vals</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(156, 220, 254);\">v</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">true</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">vals</span>), <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">intSet</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(181, 206, 168);\">5</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(181, 206, 168);\">500</span>])</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(181, 206, 168);\">100</span>] {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"100 is in the set\"</span>)</p><p>    }</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Maps</strong></p><p><br></p><p>1、定义</p><p>\t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">nilMap</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int  // nil  length为0 ，不能读写</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{} <span style=\"color: rgb(124, 166, 104);\">// 一个 empty map，可以进行读写</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">teams</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>][]<span style=\"color: rgb(86, 156, 214);\">string</span>{ <span style=\"color: rgb(124, 166, 104);\">// 非空 map</span></p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Orcas\"</span>:   []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"Fred\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Ralph\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Bijou\"</span>},</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>:   []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"Sarah\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Peter\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Billie\"</span>},</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>: []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"Waldo\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Raul\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"Ze\"</span>},</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">ages</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>(<span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">int</span>][]<span style=\"color: rgb(86, 156, 214);\">string</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>) <span style=\"color: rgb(124, 166, 104);\">// size 为 10 的 map</span></p><p><br></p><p>2、map 的特点</p><p>\t2-1、能够自动增长；</p><p>\t2-2、能使用make来初始化开始大小；</p><p>\t2-3、len 可以算出 size；</p><p>\t2-4、zero value for a map is nil；</p><p>\t2-5、map可以和nil作比较，但是不能使用 == 、 != 来判断是否含有某个 key;</p><p>\t2-6、map 的 key 值不能是 comparable type；</p><p>\t</p><p>3、map的读写</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{}</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Orcas\"</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">2</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Orcas\"</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>]<span style=\"color: rgb(212, 212, 212);\">++</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Kittens\"</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">3</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">totalWins</span>[<span style=\"color: rgb(206, 145, 120);\">\"Lions\"</span>])</p><p>//out</p><p>1</p><p>0</p><p>1</p><p>3</p><p><br></p><p>4、map中的逗号习俗 comma ok idiom&nbsp;，the scond value returned is a bool.It is usually named ok.If ok is true,the key is present in the map.</p><p>    <span style=\"color: rgb(156, 220, 254);\">m</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>: <span style=\"color: rgb(181, 206, 168);\">5</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"world\"</span>: <span style=\"color: rgb(181, 206, 168);\">0</span>,</p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">m</span>[<span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">m</span>[<span style=\"color: rgb(206, 145, 120);\">\"world\"</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">m</span>[<span style=\"color: rgb(206, 145, 120);\">\"goodbye\"</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>, <span style=\"color: rgb(156, 220, 254);\">ok</span>)</p><p>// out</p><p>5 true</p><p>0 true</p><p>0 false</p><p><br></p><p>5、deleting from map</p><p>    <span style=\"color: rgb(156, 220, 254);\">m</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>: <span style=\"color: rgb(181, 206, 168);\">5</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"world\"</span>: <span style=\"color: rgb(181, 206, 168);\">10</span>,</p><p>    }</p><p>    <span style=\"color: rgb(220, 220, 170);\">delete</span>(<span style=\"color: rgb(156, 220, 254);\">m</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>)</p><p><br></p><p>6、using maps as sets</p><p>    <span style=\"color: rgb(156, 220, 254);\">intSet</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">int</span>]<span style=\"color: rgb(86, 156, 214);\">bool</span>{}</p><p>    <span style=\"color: rgb(156, 220, 254);\">vals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">9</span>, <span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">vals</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(156, 220, 254);\">v</span>] <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">true</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">vals</span>), <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">intSet</span>))</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(181, 206, 168);\">5</span>])</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(181, 206, 168);\">500</span>])</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">intSet</span>[<span style=\"color: rgb(181, 206, 168);\">100</span>] {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"100 is in the set\"</span>)</p><p>    }</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 896,
        "lid": "851617f1-b235-4a0f-8e71-40769a5c398c",
        "word": "<p><strong>Strings and Runes and Bytes</strong></p><p>1、string 是一系列 bytes 的呈现，由 UTF-8 的字符组成，string是不可改变的</p><p>2、可以使用slice来获取string的部分内容</p><p>\t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Hello there\"</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">b</span> <span style=\"color: rgb(86, 156, 214);\">byte</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[<span style=\"color: rgb(181, 206, 168);\">6</span>]</p><p><br></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Hello there\"</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s2</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[<span style=\"color: rgb(181, 206, 168);\">4</span>:<span style=\"color: rgb(181, 206, 168);\">7</span>]</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s3</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[:<span style=\"color: rgb(181, 206, 168);\">5</span>]</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s4</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[<span style=\"color: rgb(181, 206, 168);\">6</span>:]</p><p>3、UTF-8有 1 byte 和多个 byte （如 emoji）的，用切片分隔有时候会导致字符显示有误，所以，切片时，仅切含有1 byte 组成的 string 才能保证没问题</p><p>4、转换</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(86, 156, 214);\">rune</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'x'</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">a</span>)</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">b</span> <span style=\"color: rgb(86, 156, 214);\">byte</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'y'</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s2</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">b</span>)</p><p><br></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">65</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)  // 输出 A</p><p><br></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Hello, \"</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">bs</span> []<span style=\"color: rgb(86, 156, 214);\">byte</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">byte</span>(<span style=\"color: rgb(156, 220, 254);\">s</span>)</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">rs</span> []<span style=\"color: rgb(86, 156, 214);\">rune</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">rune</span>(<span style=\"color: rgb(156, 220, 254);\">s</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">bs</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">rs</span>)</p><p>// out </p><p>[72 101 108 108 111 44 32]</p><p>[72 101 108 108 111 44 32]</p>",
        "tran": "",
        "en": "<p><strong>Strings and Runes and Bytes</strong></p><p>1、string 是一系列 bytes 的呈现，由 UTF-8 的字符组成，string是不可改变的</p><p>2、可以使用slice来获取string的部分内容</p><p>\t<span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Hello there\"</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">b</span> <span style=\"color: rgb(86, 156, 214);\">byte</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[<span style=\"color: rgb(181, 206, 168);\">6</span>]</p><p><br></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Hello there\"</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s2</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[<span style=\"color: rgb(181, 206, 168);\">4</span>:<span style=\"color: rgb(181, 206, 168);\">7</span>]</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s3</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[:<span style=\"color: rgb(181, 206, 168);\">5</span>]</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s4</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">s</span>[<span style=\"color: rgb(181, 206, 168);\">6</span>:]</p><p>3、UTF-8有 1 byte 和多个 byte （如 emoji）的，用切片分隔有时候会导致字符显示有误，所以，切片时，仅切含有1 byte 组成的 string 才能保证没问题</p><p>4、转换</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(86, 156, 214);\">rune</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'x'</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">a</span>)</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">b</span> <span style=\"color: rgb(86, 156, 214);\">byte</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'y'</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s2</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">b</span>)</p><p><br></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(86, 156, 214);\">int</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">65</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)  // 输出 A</p><p><br></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">s</span> <span style=\"color: rgb(86, 156, 214);\">string</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Hello, \"</span></p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">bs</span> []<span style=\"color: rgb(86, 156, 214);\">byte</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">byte</span>(<span style=\"color: rgb(156, 220, 254);\">s</span>)</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">rs</span> []<span style=\"color: rgb(86, 156, 214);\">rune</span> <span style=\"color: rgb(212, 212, 212);\">=</span> []<span style=\"color: rgb(86, 156, 214);\">rune</span>(<span style=\"color: rgb(156, 220, 254);\">s</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">bs</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">rs</span>)</p><p>// out </p><p>[72 101 108 108 111 44 32]</p><p>[72 101 108 108 111 44 32]</p>",
        "cn": ""
    },
    {
        "indexKey": 900,
        "lid": "a5b230f4-9d82-410e-8fcf-2d47daee2f8f",
        "word": "<p><strong>Blocks</strong></p><p><br></p><p>1、All of the variables defined at the top level of a function(including the parameters to a function) are in a block.&nbsp;</p><p>2、Within a function, every set of braces ({}) defines another block.</p><p>3、the control structures in Go define blocks of their own.</p><p>4、block里面的可以获取到block外面定义的变量。</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Blocks</strong></p><p><br></p><p>1、All of the variables defined at the top level of a function(including the parameters to a function) are in a block.&nbsp;</p><p>2、Within a function, every set of braces ({}) defines another block.</p><p>3、the control structures in Go define blocks of their own.</p><p>4、block里面的可以获取到block外面定义的变量。</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 904,
        "lid": "bd2ba005-40f4-455f-a262-e0ed0dbac9ac",
        "word": "<p><strong>for, Four Ways</strong></p><p>for的循环，只有for一个关键字</p><p>1、没有小括号；</p><p><br></p><p><strong>The Complete for Statement</strong></p><p>1、三部分：1-1、初始化的变量；1-2、条件的比较；1-3、条件的改变</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">0</span>; <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">10</span>; <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">++</span> { // for内定义变量，var 是不合法的，所以用 := ，i 在 for block中可以获得</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>)</p><p>    }</p><p><br></p><p><strong>The Condition-Only for Statement</strong></p><p>只有条件值</p><p>    <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">100</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>)</p><p>        <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">*</span> <span style=\"color: rgb(181, 206, 168);\">2</span></p><p>    }</p><p><br></p><p><strong>The Infinite for Statement</strong></p><p>无限循环</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"Hello\"</span>)</p><p>    }</p>",
        "tran": "<p><strong>break and continue</strong></p><p><br></p><p>break跳出for</p><p>continue跳过一次</p><p><br></p><p><strong>The forth -- for-range Statement</strong></p><p>\t1、with slice</p><p>    <span style=\"color: rgb(156, 220, 254);\">evenVals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">12</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">evenVals</span> { // i is the position,actually is the index or key,v is the value</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">v</span>)</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">evenVals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">12</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">evenVals</span> { // _ tells Go to ignore the value.</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>)</p><p>    }</p><p><br></p><p>\t2、with map for set</p><p>    <span style=\"color: rgb(156, 220, 254);\">uniqueNames</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">bool</span>{<span style=\"color: rgb(206, 145, 120);\">\"Fred\"</span>: <span style=\"color: rgb(86, 156, 214);\">true</span>, <span style=\"color: rgb(206, 145, 120);\">\"Raul\"</span>: <span style=\"color: rgb(86, 156, 214);\">true</span>, <span style=\"color: rgb(206, 145, 120);\">\"Wilma\"</span>: <span style=\"color: rgb(86, 156, 214);\">true</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">k</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">uniqueNames</span> { // 仅获取了 key</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">k</span>)</p><p>    }</p><p><br></p><p>\t2、with map</p><p>map的循环，不同机器或不同的时候执行，会有不同顺序</p><p>    <span style=\"color: rgb(156, 220, 254);\">m</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"a\"</span>: <span style=\"color: rgb(181, 206, 168);\">1</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"c\"</span>: <span style=\"color: rgb(181, 206, 168);\">3</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"b\"</span>: <span style=\"color: rgb(181, 206, 168);\">2</span>,</p><p>    }</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">0</span>; <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">3</span>; <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">++</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"Loop\"</span>, <span style=\"color: rgb(156, 220, 254);\">i</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">k</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">m</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">k</span>, <span style=\"color: rgb(156, 220, 254);\">v</span>)</p><p>        }</p><p>    }</p><p><br></p><p>\t3、with string</p><p>    <span style=\"color: rgb(156, 220, 254);\">samples</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"apple_π!\"</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">sample</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">samples</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">sample</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span>, <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">r</span>))</p><p>        }</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>()</p><p>    }</p><p><br></p><p>\t4、for - range the value is coped</p><p>    <span style=\"color: rgb(156, 220, 254);\">evenVals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">12</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">evenVals</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">*=</span> <span style=\"color: rgb(181, 206, 168);\">2</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">evenVals</span>) //结果不变</p>",
        "en": "<p><strong>for, Four Ways</strong></p><p>for的循环，只有for一个关键字</p><p>1、没有小括号；</p><p><br></p><p><strong>The Complete for Statement</strong></p><p>1、三部分：1-1、初始化的变量；1-2、条件的比较；1-3、条件的改变</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">0</span>; <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">10</span>; <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">++</span> { // for内定义变量，var 是不合法的，所以用 := ，i 在 for block中可以获得</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>)</p><p>    }</p><p><br></p><p><strong>The Condition-Only for Statement</strong></p><p>只有条件值</p><p>    <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">100</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>)</p><p>        <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">*</span> <span style=\"color: rgb(181, 206, 168);\">2</span></p><p>    }</p><p><br></p><p><strong>The Infinite for Statement</strong></p><p>无限循环</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"Hello\"</span>)</p><p>    }</p>",
        "cn": "<p><strong>break and continue</strong></p><p><br></p><p>break跳出for</p><p>continue跳过一次</p><p><br></p><p><strong>The forth -- for-range Statement</strong></p><p>\t1、with slice</p><p>    <span style=\"color: rgb(156, 220, 254);\">evenVals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">12</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">evenVals</span> { // i is the position,actually is the index or key,v is the value</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">v</span>)</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">evenVals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">12</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">evenVals</span> { // _ tells Go to ignore the value.</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">v</span>)</p><p>    }</p><p><br></p><p>\t2、with map for set</p><p>    <span style=\"color: rgb(156, 220, 254);\">uniqueNames</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">bool</span>{<span style=\"color: rgb(206, 145, 120);\">\"Fred\"</span>: <span style=\"color: rgb(86, 156, 214);\">true</span>, <span style=\"color: rgb(206, 145, 120);\">\"Raul\"</span>: <span style=\"color: rgb(86, 156, 214);\">true</span>, <span style=\"color: rgb(206, 145, 120);\">\"Wilma\"</span>: <span style=\"color: rgb(86, 156, 214);\">true</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">k</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">uniqueNames</span> { // 仅获取了 key</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">k</span>)</p><p>    }</p><p><br></p><p>\t2、with map</p><p>map的循环，不同机器或不同的时候执行，会有不同顺序</p><p>    <span style=\"color: rgb(156, 220, 254);\">m</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">map</span>[<span style=\"color: rgb(86, 156, 214);\">string</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"a\"</span>: <span style=\"color: rgb(181, 206, 168);\">1</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"c\"</span>: <span style=\"color: rgb(181, 206, 168);\">3</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"b\"</span>: <span style=\"color: rgb(181, 206, 168);\">2</span>,</p><p>    }</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">0</span>; <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">3</span>; <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">++</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"Loop\"</span>, <span style=\"color: rgb(156, 220, 254);\">i</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">k</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">m</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">k</span>, <span style=\"color: rgb(156, 220, 254);\">v</span>)</p><p>        }</p><p>    }</p><p><br></p><p>\t3、with string</p><p>    <span style=\"color: rgb(156, 220, 254);\">samples</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"apple_π!\"</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">sample</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">samples</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">sample</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span>, <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">r</span>))</p><p>        }</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>()</p><p>    }</p><p><br></p><p>\t4、for - range the value is coped</p><p>    <span style=\"color: rgb(156, 220, 254);\">evenVals</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">10</span>, <span style=\"color: rgb(181, 206, 168);\">12</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">evenVals</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">v</span> <span style=\"color: rgb(212, 212, 212);\">*=</span> <span style=\"color: rgb(181, 206, 168);\">2</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">evenVals</span>) //结果不变</p>"
    },
    {
        "indexKey": 893,
        "lid": "c67a9dc4-dadc-43b6-8360-01576493f70e",
        "word": "<p><strong>slicing slice 的内存示例</strong></p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:<span style=\"color: rgb(181, 206, 168);\">3</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">e</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"d:\"</span>, <span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"e:\"</span>, <span style=\"color: rgb(156, 220, 254);\">e</span>)</p><p>}</p><p><br></p><p>//  输出</p><p>x: [1 2 3 4]</p><p>y: [1 2]</p><p>z: [2 3 4]</p><p>d: [2 3]</p><p>e: [1 2 3 4]</p><p>// slicing slice的capacity，是原slice的capacity减去slicing slice左边的偏移量</p><p><br></p><p><br></p><p><br></p>",
        "tran": "",
        "en": "<p><strong>slicing slice 的内存示例</strong></p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">package</span> <span style=\"color: rgb(78, 201, 176);\">main</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> (</p><p>    <span style=\"color: rgb(206, 145, 120);\">\"fmt\"</span></p><p>    <span style=\"color: rgb(124, 166, 104);\">// \"math/cmplx\"</span></p><p>)</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">2</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">z</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:<span style=\"color: rgb(181, 206, 168);\">3</span>]</p><p>    <span style=\"color: rgb(156, 220, 254);\">e</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">x</span>[:]</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"x:\"</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"y:\"</span>, <span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"z:\"</span>, <span style=\"color: rgb(156, 220, 254);\">z</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"d:\"</span>, <span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"e:\"</span>, <span style=\"color: rgb(156, 220, 254);\">e</span>)</p><p>}</p><p><br></p><p>//  输出</p><p>x: [1 2 3 4]</p><p>y: [1 2]</p><p>z: [2 3 4]</p><p>d: [2 3]</p><p>e: [1 2 3 4]</p><p>// slicing slice的capacity，是原slice的capacity减去slicing slice左边的偏移量</p><p><br></p><p><br></p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 899,
        "lid": "cb1a3e58-764b-48ea-9c7b-23042e537c75",
        "word": "<p><strong>Comparing and Converting Structs</strong></p><p>需要同类型的才能进行比较，如果key值都相同，顺序不同也不能比较，field不匹配也不能比较，有额外的field也不能比较</p><p><br></p><p>// 下面的 field 相同，其中一个是匿名的，此种情况可以进行比较</p><p>    <span style=\"color: rgb(86, 156, 214);\">type</span> <span style=\"color: rgb(78, 201, 176);\">firstPerson</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">f</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">firstPerson</span>{</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"Bob\"</span>,</p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>:  <span style=\"color: rgb(181, 206, 168);\">50</span>,</p><p>    }</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">g</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    }</p><p>    <span style=\"color: rgb(124, 166, 104);\">// compiles -- can use = and == between identical named and anonymous structs</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">g</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">f</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">f</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(156, 220, 254);\">g</span>)</p>",
        "tran": "",
        "en": "<p><strong>Comparing and Converting Structs</strong></p><p>需要同类型的才能进行比较，如果key值都相同，顺序不同也不能比较，field不匹配也不能比较，有额外的field也不能比较</p><p><br></p><p>// 下面的 field 相同，其中一个是匿名的，此种情况可以进行比较</p><p>    <span style=\"color: rgb(86, 156, 214);\">type</span> <span style=\"color: rgb(78, 201, 176);\">firstPerson</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">f</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">firstPerson</span>{</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"Bob\"</span>,</p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>:  <span style=\"color: rgb(181, 206, 168);\">50</span>,</p><p>    }</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">g</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    }</p><p>    <span style=\"color: rgb(124, 166, 104);\">// compiles -- can use = and == between identical named and anonymous structs</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">g</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">f</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">f</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(156, 220, 254);\">g</span>)</p>",
        "cn": ""
    },
    {
        "indexKey": 903,
        "lid": "da6c1164-77cd-4d7d-b4f3-64d0c8e085fe",
        "word": "<p><strong>if</strong></p><p>1、go的if在条件中，没有小括号包括；</p><p>2、if定义的block变量，存在于 if 和 else 块，在 if 和 else 块外，获取不到 n</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <strong>n := rand.Intn(10);</strong> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too low\"</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too big:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's a good number:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    }</p><p><br></p><p>3、example</p><p>    <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">rand</span>.<span style=\"color: rgb(220, 220, 170);\">Intn</span>(<span style=\"color: rgb(181, 206, 168);\">10</span>)</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too low\"</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too big:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's a good number:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    }</p><p>//out</p><p>That's a good number: 5</p><p><br></p><p><br></p>",
        "tran": "",
        "en": "<p><strong>if</strong></p><p>1、go的if在条件中，没有小括号包括；</p><p>2、if定义的block变量，存在于 if 和 else 块，在 if 和 else 块外，获取不到 n</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <strong>n := rand.Intn(10);</strong> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too low\"</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too big:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's a good number:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    }</p><p><br></p><p>3、example</p><p>    <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">rand</span>.<span style=\"color: rgb(220, 220, 170);\">Intn</span>(<span style=\"color: rgb(181, 206, 168);\">10</span>)</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too low\"</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">n</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's too big:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    } <span style=\"color: rgb(197, 134, 192);\">else</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"That's a good number:\"</span>, <span style=\"color: rgb(156, 220, 254);\">n</span>)</p><p>    }</p><p>//out</p><p>That's a good number: 5</p><p><br></p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 905,
        "lid": "e2d46025-261f-47e8-8474-d9c8fe63b5be",
        "word": "<p><strong>Labeling Your for Statements</strong></p><p><br></p><p>为了跳过某些特定的循环</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">samples</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"apple_π!\"</span>}</p><p><span style=\"color: rgb(156, 220, 254);\">outer</span>:</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">sample</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">samples</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">sample</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span>, <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">r</span>))</p><p>            <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">r</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(206, 145, 120);\">'l'</span> {</p><p>                <span style=\"color: rgb(197, 134, 192);\">continue</span> <span style=\"color: rgb(156, 220, 254);\">outer</span></p><p>            }</p><p>        }</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>()</p><p>    }</p><p>}</p><p>//out</p><p>0 104 h</p><p>1 101 e</p><p>2 108 l</p><p>0 97 a</p><p>1 112 p</p><p>2 112 p</p><p>3 108 l</p><p><br></p>",
        "tran": "<p><strong>正确地选择循环</strong></p><p>1、for - range 是得到偏爱的，在循环 array、slice、string、map都奇好；</p><p>2、for 的使用则适合在条件多多的情况下进行选择，有序号，有值等等；</p>",
        "en": "<p><strong>Labeling Your for Statements</strong></p><p><br></p><p>为了跳过某些特定的循环</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">samples</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"apple_π!\"</span>}</p><p><span style=\"color: rgb(156, 220, 254);\">outer</span>:</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">sample</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">samples</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">sample</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(156, 220, 254);\">r</span>, <span style=\"color: rgb(86, 156, 214);\">string</span>(<span style=\"color: rgb(156, 220, 254);\">r</span>))</p><p>            <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">r</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(206, 145, 120);\">'l'</span> {</p><p>                <span style=\"color: rgb(197, 134, 192);\">continue</span> <span style=\"color: rgb(156, 220, 254);\">outer</span></p><p>            }</p><p>        }</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>()</p><p>    }</p><p>}</p><p>//out</p><p>0 104 h</p><p>1 101 e</p><p>2 108 l</p><p>0 97 a</p><p>1 112 p</p><p>2 112 p</p><p>3 108 l</p><p><br></p>",
        "cn": "<p><strong>正确地选择循环</strong></p><p>1、for - range 是得到偏爱的，在循环 array、slice、string、map都奇好；</p><p>2、for 的使用则适合在条件多多的情况下进行选择，有序号，有值等等；</p>"
    },
    {
        "indexKey": 908,
        "lid": "e8470690-6750-4fb7-a86b-980af13da888",
        "word": "<p><strong>goto—Yes, goto</strong></p><p><br></p><p>1、goto不允许跳转到并行块的内部，禁止跳过变量声明，下面的两处报错示例</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <strong style=\"color: rgb(197, 134, 192);\">goto</strong><strong> </strong><strong style=\"color: rgb(156, 220, 254);\">skip</strong><strong> </strong><strong style=\"color: rgb(124, 166, 104);\">//跳过了变量的声明</strong></p><p>    <span style=\"color: rgb(156, 220, 254);\">b</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">20</span></p><p><span style=\"color: rgb(156, 220, 254);\">skip</span>:</p><p>    <span style=\"color: rgb(156, 220, 254);\">c</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">a</span>, <span style=\"color: rgb(156, 220, 254);\">b</span>, <span style=\"color: rgb(156, 220, 254);\">c</span>)</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">c</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(156, 220, 254);\">a</span> {</p><p>        <strong style=\"color: rgb(197, 134, 192);\">goto</strong><strong> </strong><strong style=\"color: rgb(156, 220, 254);\">inner</strong><strong> </strong><strong style=\"color: rgb(124, 166, 104);\">// 跳过了并行块</strong></p><p>    }</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(156, 220, 254);\">b</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">inner</span>:</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"a is less than b\"</span>)</p><p>    }</p><p>}</p><p><br></p>",
        "tran": "<p>2、使用goto，一般用于跳出循环</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">rand</span>.<span style=\"color: rgb(220, 220, 170);\">Intn</span>(<span style=\"color: rgb(181, 206, 168);\">10</span>)</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">100</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">a</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">5</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span> {</p><p>            <span style=\"color: rgb(197, 134, 192);\">goto</span> <span style=\"color: rgb(156, 220, 254);\">done</span></p><p>        }</p><p>        <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">a</span><span style=\"color: rgb(212, 212, 212);\">*</span><span style=\"color: rgb(181, 206, 168);\">2</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"do something when the loop completes normally\"</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">done</span>:</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"do complicated stuff no matter why we left the loop\"</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">a</span>)</p><p>}</p><p><br></p><p><br></p>",
        "en": "<p><strong>goto—Yes, goto</strong></p><p><br></p><p>1、goto不允许跳转到并行块的内部，禁止跳过变量声明，下面的两处报错示例</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">10</span></p><p>    <strong style=\"color: rgb(197, 134, 192);\">goto</strong><strong> </strong><strong style=\"color: rgb(156, 220, 254);\">skip</strong><strong> </strong><strong style=\"color: rgb(124, 166, 104);\">//跳过了变量的声明</strong></p><p>    <span style=\"color: rgb(156, 220, 254);\">b</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">20</span></p><p><span style=\"color: rgb(156, 220, 254);\">skip</span>:</p><p>    <span style=\"color: rgb(156, 220, 254);\">c</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">a</span>, <span style=\"color: rgb(156, 220, 254);\">b</span>, <span style=\"color: rgb(156, 220, 254);\">c</span>)</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">c</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(156, 220, 254);\">a</span> {</p><p>        <strong style=\"color: rgb(197, 134, 192);\">goto</strong><strong> </strong><strong style=\"color: rgb(156, 220, 254);\">inner</strong><strong> </strong><strong style=\"color: rgb(124, 166, 104);\">// 跳过了并行块</strong></p><p>    }</p><p>    <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(156, 220, 254);\">b</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">inner</span>:</p><p>        <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"a is less than b\"</span>)</p><p>    }</p><p>}</p><p><br></p>",
        "cn": "<p>2、使用goto，一般用于跳出循环</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(156, 220, 254);\">rand</span>.<span style=\"color: rgb(220, 220, 170);\">Intn</span>(<span style=\"color: rgb(181, 206, 168);\">10</span>)</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">100</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">if</span> <span style=\"color: rgb(156, 220, 254);\">a</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">5</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span> {</p><p>            <span style=\"color: rgb(197, 134, 192);\">goto</span> <span style=\"color: rgb(156, 220, 254);\">done</span></p><p>        }</p><p>        <span style=\"color: rgb(156, 220, 254);\">a</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(156, 220, 254);\">a</span><span style=\"color: rgb(212, 212, 212);\">*</span><span style=\"color: rgb(181, 206, 168);\">2</span> <span style=\"color: rgb(212, 212, 212);\">+</span> <span style=\"color: rgb(181, 206, 168);\">1</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"do something when the loop completes normally\"</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">done</span>:</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"do complicated stuff no matter why we left the loop\"</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">a</span>)</p><p>}</p><p><br></p><p><br></p>"
    },
    {
        "indexKey": 898,
        "lid": "e8c6066c-4eeb-44c4-9d08-a07a818632d8",
        "word": "<p><strong>Structs</strong></p><p>1、map的扩展，可以定义 API，允许不同 key 、value 类型进行组合，定义在函数内部的struct，只能在函数内部使用；</p><p><br></p><p>2、struct type</p><p><span style=\"color: rgb(86, 156, 214);\">type</span> <span style=\"color: rgb(78, 201, 176);\">person</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">pet</span>  <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>}</p><p><br></p><p>3、struct variable type</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">fred</span> <span style=\"color: rgb(78, 201, 176);\">person</span> <span style=\"color: rgb(124, 166, 104);\">// fred为 zero value struct， 零值结构体的每个字段都设置为该字段的零值。</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">bob</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">person</span>{} <span style=\"color: rgb(124, 166, 104);\">// fields 都被设置为 0</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">julia</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">person</span>{ <span style=\"color: rgb(124, 166, 104);\">// 此种初始化，必须要和type定义顺序一致，全部值都要进行初始化 </span></p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Julia\"</span>,</p><p>        <span style=\"color: rgb(181, 206, 168);\">40</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"cat\"</span>,</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">beth</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">person</span>{ <span style=\"color: rgb(124, 166, 104);\">// 含有键值的可以缺少某些的进行初始化，但是不含键值和含有键值的不能一起进行使用</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>:  <span style=\"color: rgb(181, 206, 168);\">30</span>,</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"Beth\"</span>,</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">bob</span>.<span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Bob\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">beth</span>.<span style=\"color: rgb(156, 220, 254);\">name</span>) // 读取</p><p><br></p><p>4、匿名 struct，多用在 unmarshaling and marshaling中</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">person</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">pet</span>  <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">person</span>.<span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"bob\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">person</span>.<span style=\"color: rgb(156, 220, 254);\">age</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">50</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">person</span>.<span style=\"color: rgb(156, 220, 254);\">pet</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"dog\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">pet</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">kind</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    }{</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"Fido\"</span>,</p><p>        <span style=\"color: rgb(156, 220, 254);\">kind</span>: <span style=\"color: rgb(206, 145, 120);\">\"dog\"</span>,</p><p>    }</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Structs</strong></p><p>1、map的扩展，可以定义 API，允许不同 key 、value 类型进行组合，定义在函数内部的struct，只能在函数内部使用；</p><p><br></p><p>2、struct type</p><p><span style=\"color: rgb(86, 156, 214);\">type</span> <span style=\"color: rgb(78, 201, 176);\">person</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">pet</span>  <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>}</p><p><br></p><p>3、struct variable type</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">fred</span> <span style=\"color: rgb(78, 201, 176);\">person</span> <span style=\"color: rgb(124, 166, 104);\">// fred为 zero value struct， 零值结构体的每个字段都设置为该字段的零值。</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">bob</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">person</span>{} <span style=\"color: rgb(124, 166, 104);\">// fields 都被设置为 0</span></p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">julia</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">person</span>{ <span style=\"color: rgb(124, 166, 104);\">// 此种初始化，必须要和type定义顺序一致，全部值都要进行初始化 </span></p><p>        <span style=\"color: rgb(206, 145, 120);\">\"Julia\"</span>,</p><p>        <span style=\"color: rgb(181, 206, 168);\">40</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"cat\"</span>,</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">beth</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(78, 201, 176);\">person</span>{ <span style=\"color: rgb(124, 166, 104);\">// 含有键值的可以缺少某些的进行初始化，但是不含键值和含有键值的不能一起进行使用</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>:  <span style=\"color: rgb(181, 206, 168);\">30</span>,</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"Beth\"</span>,</p><p>    }</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">bob</span>.<span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"Bob\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">beth</span>.<span style=\"color: rgb(156, 220, 254);\">name</span>) // 读取</p><p><br></p><p>4、匿名 struct，多用在 unmarshaling and marshaling中</p><p>    <span style=\"color: rgb(86, 156, 214);\">var</span> <span style=\"color: rgb(156, 220, 254);\">person</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">age</span>  <span style=\"color: rgb(86, 156, 214);\">int</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">pet</span>  <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    }</p><p>    <span style=\"color: rgb(156, 220, 254);\">person</span>.<span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"bob\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">person</span>.<span style=\"color: rgb(156, 220, 254);\">age</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(181, 206, 168);\">50</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">person</span>.<span style=\"color: rgb(156, 220, 254);\">pet</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">\"dog\"</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">pet</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(86, 156, 214);\">struct</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>        <span style=\"color: rgb(156, 220, 254);\">kind</span> <span style=\"color: rgb(86, 156, 214);\">string</span></p><p>    }{</p><p>        <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"Fido\"</span>,</p><p>        <span style=\"color: rgb(156, 220, 254);\">kind</span>: <span style=\"color: rgb(206, 145, 120);\">\"dog\"</span>,</p><p>    }</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 895,
        "lid": "eab403c3-e703-4adf-bfa9-1bb5ae4151a8",
        "word": "<p><strong>copy</strong></p><p>// 第一个参数是目标，第二个是源</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">num</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">num</span>)</p><p>// output</p><p>[1 2 3 4] 4</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">num</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>) // 因为 y 的容量是2，因此仅复制了两个到y</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(156, 220, 254);\">inx</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">2</span>:]) // 从 x 的index 2进行复制</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">num</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">3</span>], <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:])// 复制部分的范围到另外一部分</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">num</span>)  // 2 3 4 4] 3</p><p><br></p>",
        "tran": "<p>use slice to copy</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> [<span style=\"color: rgb(181, 206, 168);\">4</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">d</span>[:])</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">d</span>[:], <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>// out</p><p>[5 6]</p><p>[1 2 3 4]</p><p><br></p><p><br></p>",
        "en": "<p><strong>copy</strong></p><p>// 第一个参数是目标，第二个是源</p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">num</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">num</span>)</p><p>// output</p><p>[1 2 3 4] 4</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">num</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>) // 因为 y 的容量是2，因此仅复制了两个到y</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(156, 220, 254);\">inx</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">2</span>:]) // 从 x 的index 2进行复制</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">num</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>[:<span style=\"color: rgb(181, 206, 168);\">3</span>], <span style=\"color: rgb(156, 220, 254);\">x</span>[<span style=\"color: rgb(181, 206, 168);\">1</span>:])// 复制部分的范围到另外一部分</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">x</span>, <span style=\"color: rgb(156, 220, 254);\">num</span>)  // 2 3 4 4] 3</p><p><br></p>",
        "cn": "<p>use slice to copy</p><p><br></p><p>    <span style=\"color: rgb(156, 220, 254);\">x</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">d</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> [<span style=\"color: rgb(181, 206, 168);\">4</span>]<span style=\"color: rgb(86, 156, 214);\">int</span>{<span style=\"color: rgb(181, 206, 168);\">5</span>, <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>}</p><p>    <span style=\"color: rgb(156, 220, 254);\">y</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">make</span>([]<span style=\"color: rgb(86, 156, 214);\">int</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>)</p><p>    <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>, <span style=\"color: rgb(156, 220, 254);\">d</span>[:])</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">y</span>)</p><p>    <span style=\"color: rgb(220, 220, 170);\">copy</span>(<span style=\"color: rgb(156, 220, 254);\">d</span>[:], <span style=\"color: rgb(156, 220, 254);\">x</span>)</p><p>    <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">d</span>)</p><p>// out</p><p>[5 6]</p><p>[1 2 3 4]</p><p><br></p><p><br></p>"
    },
    {
        "indexKey": 906,
        "lid": "f9c169af-9550-438e-99bf-2320b7b19c26",
        "word": "<p><strong>switch</strong></p><p>1、可以在switch定义一个shadow变量；</p><p>2、case不必使用小括号；</p><p>3、case处除了使用值，也可以使用比较来进行判断；</p><p>4、break可以像 for 循环一样，需要添加一个label才能跳出 switch 块；</p><p>5、examples</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">words</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"a\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"cow\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"smile\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"gopher\"</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"octopus\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"anthropologist\"</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">word</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">words</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">switch</span> <span style=\"color: rgb(156, 220, 254);\">size</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>); <span style=\"color: rgb(156, 220, 254);\">size</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a short word!\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(181, 206, 168);\">5</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>)</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is exactly the right length:\"</span>, <span style=\"color: rgb(156, 220, 254);\">wordLen</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">9</span>: <span style=\"color: rgb(124, 166, 104);\">// an empty case,nothing happen here,and not fall to the default</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">default</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a long word!\"</span>)</p><p>        }</p><p>    }</p><p>}</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p><span style=\"color: rgb(156, 220, 254);\">loop</span>: <span style=\"color: rgb(124, 166, 104);\">//label here</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">0</span>; <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">10</span>; <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">++</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">switch</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">2</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(206, 145, 120);\">\"is even\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">3</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(206, 145, 120);\">\"is divisible by 3 but not 2\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">7</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"exit the loop!\"</span>)</p><p>            <span style=\"color: rgb(197, 134, 192);\">break</span> <span style=\"color: rgb(156, 220, 254);\">loop</span>  <span style=\"color: rgb(124, 166, 104);\">// 需要label 才能跳出 switch 块</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">default</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(206, 145, 120);\">\"is boring\"</span>)</p><p>        }</p><p>    }</p><p>}</p>",
        "tran": "<p><strong>Blank Switches</strong></p><p>switch 出没有制定相应变量的</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">words</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"hi\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"salutations\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">word</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">words</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">switch</span> <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>); { <span style=\"color: rgb(124, 166, 104);\">// switch 处没有指定相应的变量</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a short word!\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">10</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a long word!\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">default</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is exactly the right length.\"</span>)</p><p>        }</p><p>    }</p><p>}</p><p><br></p><p><br></p>",
        "en": "<p><strong>switch</strong></p><p>1、可以在switch定义一个shadow变量；</p><p>2、case不必使用小括号；</p><p>3、case处除了使用值，也可以使用比较来进行判断；</p><p>4、break可以像 for 循环一样，需要添加一个label才能跳出 switch 块；</p><p>5、examples</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">words</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"a\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"cow\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"smile\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"gopher\"</span>,</p><p>        <span style=\"color: rgb(206, 145, 120);\">\"octopus\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"anthropologist\"</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">word</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">words</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">switch</span> <span style=\"color: rgb(156, 220, 254);\">size</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>); <span style=\"color: rgb(156, 220, 254);\">size</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(181, 206, 168);\">1</span>, <span style=\"color: rgb(181, 206, 168);\">2</span>, <span style=\"color: rgb(181, 206, 168);\">3</span>, <span style=\"color: rgb(181, 206, 168);\">4</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a short word!\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(181, 206, 168);\">5</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>)</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is exactly the right length:\"</span>, <span style=\"color: rgb(156, 220, 254);\">wordLen</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(181, 206, 168);\">6</span>, <span style=\"color: rgb(181, 206, 168);\">7</span>, <span style=\"color: rgb(181, 206, 168);\">8</span>, <span style=\"color: rgb(181, 206, 168);\">9</span>: <span style=\"color: rgb(124, 166, 104);\">// an empty case,nothing happen here,and not fall to the default</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">default</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a long word!\"</span>)</p><p>        }</p><p>    }</p><p>}</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p><span style=\"color: rgb(156, 220, 254);\">loop</span>: <span style=\"color: rgb(124, 166, 104);\">//label here</span></p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(181, 206, 168);\">0</span>; <span style=\"color: rgb(156, 220, 254);\">i</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">10</span>; <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">++</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">switch</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">2</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(206, 145, 120);\">\"is even\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">3</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(206, 145, 120);\">\"is divisible by 3 but not 2\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">i</span><span style=\"color: rgb(212, 212, 212);\">%</span><span style=\"color: rgb(181, 206, 168);\">7</span> <span style=\"color: rgb(212, 212, 212);\">==</span> <span style=\"color: rgb(181, 206, 168);\">0</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(206, 145, 120);\">\"exit the loop!\"</span>)</p><p>            <span style=\"color: rgb(197, 134, 192);\">break</span> <span style=\"color: rgb(156, 220, 254);\">loop</span>  <span style=\"color: rgb(124, 166, 104);\">// 需要label 才能跳出 switch 块</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">default</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">i</span>, <span style=\"color: rgb(206, 145, 120);\">\"is boring\"</span>)</p><p>        }</p><p>    }</p><p>}</p>",
        "cn": "<p><strong>Blank Switches</strong></p><p>switch 出没有制定相应变量的</p><p><span style=\"color: rgb(86, 156, 214);\">func</span> <span style=\"color: rgb(220, 220, 170);\">main</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">words</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> []<span style=\"color: rgb(86, 156, 214);\">string</span>{<span style=\"color: rgb(206, 145, 120);\">\"hi\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"salutations\"</span>, <span style=\"color: rgb(206, 145, 120);\">\"hello\"</span>}</p><p>    <span style=\"color: rgb(197, 134, 192);\">for</span> <span style=\"color: rgb(156, 220, 254);\">_</span>, <span style=\"color: rgb(156, 220, 254);\">word</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(197, 134, 192);\">range</span> <span style=\"color: rgb(156, 220, 254);\">words</span> {</p><p>        <span style=\"color: rgb(197, 134, 192);\">switch</span> <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">:=</span> <span style=\"color: rgb(220, 220, 170);\">len</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>); { <span style=\"color: rgb(124, 166, 104);\">// switch 处没有指定相应的变量</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">&lt;</span> <span style=\"color: rgb(181, 206, 168);\">5</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a short word!\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">case</span> <span style=\"color: rgb(156, 220, 254);\">wordLen</span> <span style=\"color: rgb(212, 212, 212);\">&gt;</span> <span style=\"color: rgb(181, 206, 168);\">10</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is a long word!\"</span>)</p><p>        <span style=\"color: rgb(197, 134, 192);\">default</span>:</p><p>            <span style=\"color: rgb(156, 220, 254);\">fmt</span>.<span style=\"color: rgb(220, 220, 170);\">Println</span>(<span style=\"color: rgb(156, 220, 254);\">word</span>, <span style=\"color: rgb(206, 145, 120);\">\"is exactly the right length.\"</span>)</p><p>        }</p><p>    }</p><p>}</p><p><br></p><p><br></p>"
    }
]