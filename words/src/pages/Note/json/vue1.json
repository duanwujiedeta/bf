[
    {
        "indexKey": 847,
        "lid": "0f6fd85d-870a-40ef-82cb-94d197ae3abc",
        "word": "<p><strong>Methods</strong></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"ReversedMessage\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"\"</span>,</p><p>    };</p><p>  },</p><p>  <span style=\"color: rgb(156, 220, 254);\">methods:</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>()<span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span> {</p><p>      <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>);</p><p>    },</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><br></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>() }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your message\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "tran": "<p>Defining a method to reverse a string</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"MyFistComponent\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"\"</span>,</p><p>    };</p><p>  },</p><p>  <span style=\"color: rgb(156, 220, 254);\">methods:</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>(<span style=\"color: rgb(156, 220, 254);\">message</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>)<span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span> {</p><p>      <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>);</p><p>    },</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>(<span style=\"color: rgb(156, 220, 254);\">message</span>) }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your message\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><br></p>",
        "en": "<p><strong>Methods</strong></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"ReversedMessage\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"\"</span>,</p><p>    };</p><p>  },</p><p>  <span style=\"color: rgb(156, 220, 254);\">methods:</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>()<span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span> {</p><p>      <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>);</p><p>    },</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><br></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>() }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your message\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "cn": "<p>Defining a method to reverse a string</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"MyFistComponent\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"\"</span>,</p><p>    };</p><p>  },</p><p>  <span style=\"color: rgb(156, 220, 254);\">methods:</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>(<span style=\"color: rgb(156, 220, 254);\">message</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>)<span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span> {</p><p>      <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">\"\"</span>);</p><p>    },</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(220, 220, 170);\">reverseMessage</span>(<span style=\"color: rgb(156, 220, 254);\">message</span>) }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your message\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><br></p>"
    },
    {
        "indexKey": 849,
        "lid": "11ece13e-b293-4323-8ac0-5f282f31a64f",
        "word": "<p><strong>Watchers</strong></p><p>The computed automatic watcher mechanism can create overhead to keep the component's performance stable.</p><p><br></p><p>The watcher and computed property can cause side effects.(副作用)</p><p><br></p><p>{</p><p>\thandler,deep,immediate,flush</p><p>}</p>",
        "tran": "<p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'MyFirstComponent'</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">'Hello Vue!'</span></p><p>        }</p><p>    },</p><p>    <span style=\"color: rgb(156, 220, 254);\">watch:</span> {</p><p>        <span style=\"color: rgb(220, 220, 170);\">message</span>(<span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>) {</p><p>            <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">`new value: </span><span style=\"color: rgb(86, 156, 214);\">${</span><span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(86, 156, 214);\">}</span><span style=\"color: rgb(206, 145, 120);\">, old value: </span><span style=\"color: rgb(86, 156, 214);\">${</span><span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(86, 156, 214);\">}</span><span style=\"color: rgb(206, 145, 120);\">`</span>)</p><p>        }</p><p>    }</p><p>}</p>",
        "en": "<p><strong>Watchers</strong></p><p>The computed automatic watcher mechanism can create overhead to keep the component's performance stable.</p><p><br></p><p>The watcher and computed property can cause side effects.(副作用)</p><p><br></p><p>{</p><p>\thandler,deep,immediate,flush</p><p>}</p>",
        "cn": "<p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'MyFirstComponent'</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">'Hello Vue!'</span></p><p>        }</p><p>    },</p><p>    <span style=\"color: rgb(156, 220, 254);\">watch:</span> {</p><p>        <span style=\"color: rgb(220, 220, 170);\">message</span>(<span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>) {</p><p>            <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">`new value: </span><span style=\"color: rgb(86, 156, 214);\">${</span><span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(86, 156, 214);\">}</span><span style=\"color: rgb(206, 145, 120);\">, old value: </span><span style=\"color: rgb(86, 156, 214);\">${</span><span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(86, 156, 214);\">}</span><span style=\"color: rgb(206, 145, 120);\">`</span>)</p><p>        }</p><p>    }</p><p>}</p>"
    },
    {
        "indexKey": 850,
        "lid": "1c62e288-6d15-4fb9-9e31-27df6f64fc77",
        "word": "<p><strong>Deep options</strong></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">type</span> <span style=\"color: rgb(78, 201, 176);\">User</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">name</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">age</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">number</span></p><p>}</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'UserWatcherComponent'</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>()<span style=\"color: rgb(212, 212, 212);\">:</span> { <span style=\"color: rgb(156, 220, 254);\">user</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">User</span> } {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">user:</span> {</p><p>                <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'John'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">age:</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>            }</p><p>        }</p><p>    },</p><p>    <span style=\"color: rgb(156, 220, 254);\">watch:</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">user:</span> {</p><p>            <span style=\"color: rgb(220, 220, 170);\">handler</span>(<span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">User</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">User</span>) {</p><p>                <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>({ <span style=\"color: rgb(156, 220, 254);\">newValue</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span> })</p><p>            },</p><p>            <span style=\"color: rgb(156, 220, 254);\">deep:</span> <span style=\"color: rgb(86, 156, 214);\">true</span></p><p>        }</p><p>    }</p><p>})</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">label</span> <span style=\"color: rgb(156, 220, 254);\">for</span>=<span style=\"color: rgb(206, 145, 120);\">\"name\"</span></p><p>        <span style=\"color: rgb(128, 128, 128);\">&gt;</span>Name:</p><p>        <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">user</span>.<span style=\"color: rgb(156, 220, 254);\">name</span>\" <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your name\"</span> <span style=\"color: rgb(156, 220, 254);\">id</span>=<span style=\"color: rgb(206, 145, 120);\">\"name\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">label</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">label</span> <span style=\"color: rgb(156, 220, 254);\">for</span>=<span style=\"color: rgb(206, 145, 120);\">\"age\"</span></p><p>        <span style=\"color: rgb(128, 128, 128);\">&gt;</span>Age:</p><p>        <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">user</span>.<span style=\"color: rgb(156, 220, 254);\">age</span>\" <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your age\"</span> <span style=\"color: rgb(156, 220, 254);\">id</span>=<span style=\"color: rgb(206, 145, 120);\">\"age\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">label</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "tran": "<p>To specify which nested properties</p><p><span style=\"color: rgb(124, 166, 104);\">//...</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(124, 166, 104);\">//...</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">watch:</span> {</p><p>        <strong style=\"color: rgb(206, 145, 120);\">'</strong><strong>user.name'</strong><strong style=\"color: rgb(156, 220, 254);\">:</strong><strong> {</strong></p><p>            <span style=\"color: rgb(220, 220, 170);\">handler</span>(<span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>) {</p><p>                <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>({ <span style=\"color: rgb(156, 220, 254);\">newValue</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span> })</p><p>            },</p><p>        },</p><p>    }</p><p>});</p><p><br></p>",
        "en": "<p><strong>Deep options</strong></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">type</span> <span style=\"color: rgb(78, 201, 176);\">User</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">name</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">age</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">number</span></p><p>}</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'UserWatcherComponent'</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>()<span style=\"color: rgb(212, 212, 212);\">:</span> { <span style=\"color: rgb(156, 220, 254);\">user</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">User</span> } {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">user:</span> {</p><p>                <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'John'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">age:</span> <span style=\"color: rgb(181, 206, 168);\">30</span></p><p>            }</p><p>        }</p><p>    },</p><p>    <span style=\"color: rgb(156, 220, 254);\">watch:</span> {</p><p>        <span style=\"color: rgb(156, 220, 254);\">user:</span> {</p><p>            <span style=\"color: rgb(220, 220, 170);\">handler</span>(<span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">User</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">User</span>) {</p><p>                <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>({ <span style=\"color: rgb(156, 220, 254);\">newValue</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span> })</p><p>            },</p><p>            <span style=\"color: rgb(156, 220, 254);\">deep:</span> <span style=\"color: rgb(86, 156, 214);\">true</span></p><p>        }</p><p>    }</p><p>})</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">label</span> <span style=\"color: rgb(156, 220, 254);\">for</span>=<span style=\"color: rgb(206, 145, 120);\">\"name\"</span></p><p>        <span style=\"color: rgb(128, 128, 128);\">&gt;</span>Name:</p><p>        <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">user</span>.<span style=\"color: rgb(156, 220, 254);\">name</span>\" <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your name\"</span> <span style=\"color: rgb(156, 220, 254);\">id</span>=<span style=\"color: rgb(206, 145, 120);\">\"name\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">label</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">label</span> <span style=\"color: rgb(156, 220, 254);\">for</span>=<span style=\"color: rgb(206, 145, 120);\">\"age\"</span></p><p>        <span style=\"color: rgb(128, 128, 128);\">&gt;</span>Age:</p><p>        <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">user</span>.<span style=\"color: rgb(156, 220, 254);\">age</span>\" <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your age\"</span> <span style=\"color: rgb(156, 220, 254);\">id</span>=<span style=\"color: rgb(206, 145, 120);\">\"age\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>      <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">label</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>    <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">div</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "cn": "<p>To specify which nested properties</p><p><span style=\"color: rgb(124, 166, 104);\">//...</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(124, 166, 104);\">//...</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">watch:</span> {</p><p>        <strong style=\"color: rgb(206, 145, 120);\">'</strong><strong>user.name'</strong><strong style=\"color: rgb(156, 220, 254);\">:</strong><strong> {</strong></p><p>            <span style=\"color: rgb(220, 220, 170);\">handler</span>(<span style=\"color: rgb(156, 220, 254);\">newValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span><span style=\"color: rgb(212, 212, 212);\">:</span> <span style=\"color: rgb(78, 201, 176);\">string</span>) {</p><p>                <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>({ <span style=\"color: rgb(156, 220, 254);\">newValue</span>, <span style=\"color: rgb(156, 220, 254);\">oldValue</span> })</p><p>            },</p><p>        },</p><p>    }</p><p>});</p><p><br></p>"
    },
    {
        "indexKey": 831,
        "lid": "2b9f430c-140a-4dc3-8003-c4b5db5b6ddc",
        "word": "<p>Dynamically Displaying HTML Code with <strong>v-html</strong></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-html=\"innerContent\" /&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">innerContent:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;Hello&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "tran": "<p>You should use v-html to render only trusted content or perform server-side rendering.</p>",
        "en": "<p>Dynamically Displaying HTML Code with <strong>v-html</strong></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-html=\"innerContent\" /&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">innerContent:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;Hello&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "cn": "<p>You should use v-html to render only trusted content or perform server-side rendering.</p>"
    },
    {
        "indexKey": 843,
        "lid": "35416cfa-8414-4cc3-ace5-968d004eb9a2",
        "word": "<p><strong>created</strong></p><p>At this stage, the component instance exists with reactive data, watchers,computed properties, and defined methods.However, the Vue engine hasn’t yet mounted it to the DOM.</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>created</strong></p><p>At this stage, the component instance exists with reactive data, watchers,computed properties, and defined methods.However, the Vue engine hasn’t yet mounted it to the DOM.</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 835,
        "lid": "366a0f75-d143-46d0-9e90-12e43f8b628a",
        "word": "<p><strong>Registering a Component Globally</strong></p><p><br></p><p>Vue exposes the instance method Vue.component(), which receives two input param‐eters as arguments:</p><p><br></p><p><span style=\"color: rgb(124, 166, 104);\">/* main.ts */</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createApp</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(124, 166, 104);\">//1. Create the app instance</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>({</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">'&lt;MyComponent /&gt;'</span></p><p>});</p><p><span style=\"color: rgb(124, 166, 104);\">//2. Define the component</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">MyComponent</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">'This is my global component'</span></p><p>}</p><p><span style=\"color: rgb(124, 166, 104);\">//3. Register a component globally</span></p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">component</span>(<span style=\"color: rgb(206, 145, 120);\">'MyComponent'</span>, <span style=\"color: rgb(156, 220, 254);\">MyComponent</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "tran": "",
        "en": "<p><strong>Registering a Component Globally</strong></p><p><br></p><p>Vue exposes the instance method Vue.component(), which receives two input param‐eters as arguments:</p><p><br></p><p><span style=\"color: rgb(124, 166, 104);\">/* main.ts */</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createApp</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(124, 166, 104);\">//1. Create the app instance</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>({</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">'&lt;MyComponent /&gt;'</span></p><p>});</p><p><span style=\"color: rgb(124, 166, 104);\">//2. Define the component</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">MyComponent</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">'This is my global component'</span></p><p>}</p><p><span style=\"color: rgb(124, 166, 104);\">//3. Register a component globally</span></p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">component</span>(<span style=\"color: rgb(206, 145, 120);\">'MyComponent'</span>, <span style=\"color: rgb(156, 220, 254);\">MyComponent</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "cn": ""
    },
    {
        "indexKey": 829,
        "lid": "549e54e2-0e09-4586-ad27-d9867d700d09",
        "word": "<p><strong>Using v-else</strong></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-if=\"isVisible\"&gt;I'm the visible text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-else&gt;I'm the replacement text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;/div&gt;`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">isVisible:</span> <span style=\"color: rgb(86, 156, 214);\">false</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "tran": "<p><strong>v-else-if</strong></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-if=\"isVisible\"&gt;I'm the visible text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-else-if=\"showSubtitle\"&gt;I'm the subtitle text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-else&gt;I'm the replacement text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">isVisible:</span> <span style=\"color: rgb(86, 156, 214);\">false</span>,</p><p>            <span style=\"color: rgb(156, 220, 254);\">showSubtitle:</span> <span style=\"color: rgb(86, 156, 214);\">false</span>,</p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p><p><br></p><p>While using v-if means to render an element conditionally, there are situations where it won’t be efficient to mount/unmount an element from the DOM so frequently.</p>",
        "en": "<p><strong>Using v-else</strong></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-if=\"isVisible\"&gt;I'm the visible text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-else&gt;I'm the replacement text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;/div&gt;`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">isVisible:</span> <span style=\"color: rgb(86, 156, 214);\">false</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "cn": "<p><strong>v-else-if</strong></p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-if=\"isVisible\"&gt;I'm the visible text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-else-if=\"showSubtitle\"&gt;I'm the subtitle text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-else&gt;I'm the replacement text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">isVisible:</span> <span style=\"color: rgb(86, 156, 214);\">false</span>,</p><p>            <span style=\"color: rgb(156, 220, 254);\">showSubtitle:</span> <span style=\"color: rgb(86, 156, 214);\">false</span>,</p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p><p><br></p><p>While using v-if means to render an element conditionally, there are situations where it won’t be efficient to mount/unmount an element from the DOM so frequently.</p>"
    },
    {
        "indexKey": 836,
        "lid": "605cf82b-7dd0-41f5-8307-fb8624fc64c4",
        "word": "<p>CHAPTER 3</p><p><strong>Composing Components</strong></p><p><br></p><p>Component contains three essential code sections:</p><p>\tTemplate</p><p>\tScript</p><p>\tStyle</p>",
        "tran": "<p>SFC structure of MyFirstComponent component</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am a a Vue component<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>  <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"MyFistComponent\"</span>,</p><p>};</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">style</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(215, 186, 125);\">.heading</span> {</p><p>  <span style=\"color: rgb(212, 212, 212);\">font-size</span>: <span style=\"color: rgb(181, 206, 168);\">16px</span>;</p><p>}</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">style</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "en": "<p>CHAPTER 3</p><p><strong>Composing Components</strong></p><p><br></p><p>Component contains three essential code sections:</p><p>\tTemplate</p><p>\tScript</p><p>\tStyle</p>",
        "cn": "<p>SFC structure of MyFirstComponent component</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am a a Vue component<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>  <span style=\"color: rgb(156, 220, 254);\">name</span>: <span style=\"color: rgb(206, 145, 120);\">\"MyFistComponent\"</span>,</p><p>};</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">style</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(215, 186, 125);\">.heading</span> {</p><p>  <span style=\"color: rgb(212, 212, 212);\">font-size</span>: <span style=\"color: rgb(181, 206, 168);\">16px</span>;</p><p>}</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">style</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>"
    },
    {
        "indexKey": 837,
        "lid": "6240e346-a774-4c66-8e21-5ce741489525",
        "word": "<p><strong>&lt;script lang=\"ts\"&gt;</strong></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> <span style=\"color: rgb(156, 220, 254);\">MyFirstComponent</span> <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"./components/MyFirstComponent.vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>  <span style=\"color: rgb(156, 220, 254);\">components:</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">MyFirstComponent</span>,</p><p>  },</p><p>};</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><br></p><p><strong>usage</strong></p>",
        "tran": "<p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">my-first-component</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(78, 201, 176);\">MyFirstComponent</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "en": "<p><strong>&lt;script lang=\"ts\"&gt;</strong></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> <span style=\"color: rgb(156, 220, 254);\">MyFirstComponent</span> <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"./components/MyFirstComponent.vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>  <span style=\"color: rgb(156, 220, 254);\">components:</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">MyFirstComponent</span>,</p><p>  },</p><p>};</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><br></p><p><strong>usage</strong></p>",
        "cn": "<p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">my-first-component</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(78, 201, 176);\">MyFirstComponent</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>"
    },
    {
        "indexKey": 830,
        "lid": "6d1e1b25-695f-4234-ac7d-c48df236312f",
        "word": "<p><strong>v-show</strong></p><p><br></p><p>v-show is faster than v-if</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-show=\"isVisible\"&gt;I'm the text in toggle&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;Visibility: {{isVisible}}&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">isVisible:</span> <span style=\"color: rgb(86, 156, 214);\">false</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p><p><br></p><p><br></p>",
        "tran": "",
        "en": "<p><strong>v-show</strong></p><p><br></p><p>v-show is faster than v-if</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-show=\"isVisible\"&gt;I'm the text in toggle&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div&gt;Visibility: {{isVisible}}&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">isVisible:</span> <span style=\"color: rgb(86, 156, 214);\">false</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p><p><br></p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 848,
        "lid": "6e1a5099-7c14-4948-bd35-2cfb728835a8",
        "word": "<p><strong>Computed Properties</strong></p><p>When use method,Vue does not cache the result of every trigger,so use computed.</p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'ReversedMessage'</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">'Hello Vue!'</span></p><p>        }</p><p>    },</p><p>    <span style=\"color: rgb(156, 220, 254);\">computed:</span> {</p><p>        <span style=\"color: rgb(220, 220, 170);\">reversedMessage</span>() {</p><p>            <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>)</p><p>        }</p><p>    }</p><p>})</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(156, 220, 254);\">reversedMessage</span> }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your message\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "tran": "<p>You can also calculate a new computed property based on the computed property’s value.&nbsp;</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(124, 166, 104);\">/**... */</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">computed:</span> {</p><p>        <span style=\"color: rgb(220, 220, 170);\">reversedMessage</span>() {</p><p>            <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>)</p><p>        },</p><p>        <span style=\"color: rgb(220, 220, 170);\">reversedMessageLength</span>() {</p><p>            <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(220, 220, 170);\">reversedMessage</span>.<span style=\"color: rgb(156, 220, 254);\">length</span></p><p>        }</p><p>    }</p><p>})</p><p><br></p>",
        "en": "<p><strong>Computed Properties</strong></p><p>When use method,Vue does not cache the result of every trigger,so use computed.</p><p><br></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'ReversedMessage'</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">'Hello Vue!'</span></p><p>        }</p><p>    },</p><p>    <span style=\"color: rgb(156, 220, 254);\">computed:</span> {</p><p>        <span style=\"color: rgb(220, 220, 170);\">reversedMessage</span>() {</p><p>            <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>)</p><p>        }</p><p>    }</p><p>})</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(156, 220, 254);\">reversedMessage</span> }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your message\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "cn": "<p>You can also calculate a new computed property based on the computed property’s value.&nbsp;</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(124, 166, 104);\">/**... */</span></p><p>    <span style=\"color: rgb(156, 220, 254);\">computed:</span> {</p><p>        <span style=\"color: rgb(220, 220, 170);\">reversedMessage</span>() {</p><p>            <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(156, 220, 254);\">message</span>.<span style=\"color: rgb(220, 220, 170);\">split</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>).<span style=\"color: rgb(220, 220, 170);\">reverse</span>().<span style=\"color: rgb(220, 220, 170);\">join</span>(<span style=\"color: rgb(206, 145, 120);\">''</span>)</p><p>        },</p><p>        <span style=\"color: rgb(220, 220, 170);\">reversedMessageLength</span>() {</p><p>            <span style=\"color: rgb(197, 134, 192);\">return</span> <span style=\"color: rgb(86, 156, 214);\">this</span>.<span style=\"color: rgb(220, 220, 170);\">reversedMessage</span>.<span style=\"color: rgb(156, 220, 254);\">length</span></p><p>        }</p><p>    }</p><p>})</p><p><br></p>"
    },
    {
        "indexKey": 834,
        "lid": "80b4a4c5-0b45-482f-9896-423535c62024",
        "word": "<p>use v-memo,Vue will only re-render two items: the previously selected item and the currently selected one. For optimizing large list rendering, this directive can be very powerful.</p>",
        "tran": "",
        "en": "<p>use v-memo,Vue will only re-render two items: the previously selected item and the currently selected one. For optimizing large list rendering, this directive can be very powerful.</p>",
        "cn": ""
    },
    {
        "indexKey": 840,
        "lid": "86497047-a615-4af4-a278-9173b3c00895",
        "word": "<p><strong>setup</strong></p><p>\tsetup is the first event hook before the component’s lifecycle starts. This hook runs once before Vue instantiates the component. At this phase, no component instance exists; hence there is no access to this:</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">setup</span>(props, context) {</p><p>        <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">'setup hook'</span>)</p><p>        <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(86, 156, 214);\">this</span>) <span style=\"color: rgb(124, 166, 104);\">// undefined</span></p><p>    }</p><p>}</p><p>arguments:</p><p>\tprops</p><p>\tAn object that contains all the props passed to the component, declared using the props field of the component’s options object. Each of props’s properties is reactive data. You don’t need to return props as part of the setup() return object.</p><p>\tcontext</p><p>\tA non-reactive object that contains the component’s context, such as attrs,slots, emit, and expose.</p>",
        "tran": "<p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(220, 220, 170);\">setup</span>() {</p><p>        <span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">message</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'Welcome to Vue 3!'</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">message</span></p><p>        }</p><p>    }</p><p>})</p><p>Note here that message is not reactive data. To make it reactive, you must wrap it with the ref() function from the Composition API.</p><p><br></p><p>Example 3-5. Defining a component with <strong>&lt;script setup&gt; syntax</strong></p><p>&lt;script setup lang='ts'&gt;</p><p>const message = 'Welcome to Vue 3!'</p><p>&lt;/script&gt;</p><p><br></p>",
        "en": "<p><strong>setup</strong></p><p>\tsetup is the first event hook before the component’s lifecycle starts. This hook runs once before Vue instantiates the component. At this phase, no component instance exists; hence there is no access to this:</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">setup</span>(props, context) {</p><p>        <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">'setup hook'</span>)</p><p>        <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(86, 156, 214);\">this</span>) <span style=\"color: rgb(124, 166, 104);\">// undefined</span></p><p>    }</p><p>}</p><p>arguments:</p><p>\tprops</p><p>\tAn object that contains all the props passed to the component, declared using the props field of the component’s options object. Each of props’s properties is reactive data. You don’t need to return props as part of the setup() return object.</p><p>\tcontext</p><p>\tA non-reactive object that contains the component’s context, such as attrs,slots, emit, and expose.</p>",
        "cn": "<p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(220, 220, 170);\">setup</span>() {</p><p>        <span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">message</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'Welcome to Vue 3!'</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">message</span></p><p>        }</p><p>    }</p><p>})</p><p>Note here that message is not reactive data. To make it reactive, you must wrap it with the ref() function from the Composition API.</p><p><br></p><p>Example 3-5. Defining a component with <strong>&lt;script setup&gt; syntax</strong></p><p>&lt;script setup lang='ts'&gt;</p><p>const message = 'Welcome to Vue 3!'</p><p>&lt;/script&gt;</p><p><br></p>"
    },
    {
        "indexKey": 833,
        "lid": "8cf1a87f-9899-4955-8b14-33334aff28af",
        "word": "<p><strong>Optimizing Renders with v-once and v-memo</strong></p><p><br></p><p>use v-once,Vue renders elements with this directive presented only once and will not update it regardless of any re-rendering.</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`&lt;div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">        &lt;input v-model=\"name\" placeholder=\"Enter your name\" &gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;div v-once&gt;{{name}}&lt;/div&gt;`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'Maya'</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "tran": "<p><strong>v-memo </strong>accepts an array of JavaScript expressions as its value</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">selected:</span> <span style=\"color: rgb(86, 156, 214);\">null</span>,</p><p>            <span style=\"color: rgb(156, 220, 254);\">images:</span> [{</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">1</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Cute cat'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/TheCute%20Cat'</span>,</p><p>            }, {</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">2</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Cute cat no 2'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/cute_cat'</span>,</p><p>            }, {</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">3</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Cute cat no 3'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/cat_me'</span>,</p><p>            }, {</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">4</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Just a cat'</span>, <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/cat_1'</span>,</p><p>            }]</p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`&lt;ul&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;li</span></p><p><span style=\"color: rgb(206, 145, 120);\">    v-for=\"image in images\"</span></p><p><span style=\"color: rgb(206, 145, 120);\">    :key=\"image.id\"</span></p><p><span style=\"color: rgb(206, 145, 120);\">    :style=\" selected === image.id ? { border: '1px solid blue' } : {}\"</span></p><p><span style=\"color: rgb(206, 145, 120);\">    </span><strong>@click=\"selected = image.id\"</strong></p><p><span style=\"color: rgb(206, 145, 120);\">    </span><strong>v-memo=\"[selected === image.id]\"</strong></p><p><span style=\"color: rgb(206, 145, 120);\">    &gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;img :src=\"image.url\"&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;div&gt;{{image.title}}&lt;/h2&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;/li&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;/ul&gt;`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(124, 166, 104);\">/*..*/</span></p><p>    }</p><p>}</p><p>We set the re-rendering to only if the condition check selected === image.id results differently from the previous check.</p>",
        "en": "<p><strong>Optimizing Renders with v-once and v-memo</strong></p><p><br></p><p>use v-once,Vue renders elements with this directive presented only once and will not update it regardless of any re-rendering.</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`&lt;div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">        &lt;input v-model=\"name\" placeholder=\"Enter your name\" &gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;div v-once&gt;{{name}}&lt;/div&gt;`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">'Maya'</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p>",
        "cn": "<p><strong>v-memo </strong>accepts an array of JavaScript expressions as its value</p><p><br></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">selected:</span> <span style=\"color: rgb(86, 156, 214);\">null</span>,</p><p>            <span style=\"color: rgb(156, 220, 254);\">images:</span> [{</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">1</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Cute cat'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/TheCute%20Cat'</span>,</p><p>            }, {</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">2</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Cute cat no 2'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/cute_cat'</span>,</p><p>            }, {</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">3</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Cute cat no 3'</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/cat_me'</span>,</p><p>            }, {</p><p>                <span style=\"color: rgb(156, 220, 254);\">id:</span> <span style=\"color: rgb(181, 206, 168);\">4</span>,</p><p>                <span style=\"color: rgb(156, 220, 254);\">title:</span> <span style=\"color: rgb(206, 145, 120);\">'Just a cat'</span>, <span style=\"color: rgb(156, 220, 254);\">url:</span></p><p>                    <span style=\"color: rgb(206, 145, 120);\">'https://res.cloudinary.com/mayashavin/image/upload/w_100,h_100,c_thumb/cat_1'</span>,</p><p>            }]</p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`&lt;ul&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;li</span></p><p><span style=\"color: rgb(206, 145, 120);\">    v-for=\"image in images\"</span></p><p><span style=\"color: rgb(206, 145, 120);\">    :key=\"image.id\"</span></p><p><span style=\"color: rgb(206, 145, 120);\">    :style=\" selected === image.id ? { border: '1px solid blue' } : {}\"</span></p><p><span style=\"color: rgb(206, 145, 120);\">    </span><strong>@click=\"selected = image.id\"</strong></p><p><span style=\"color: rgb(206, 145, 120);\">    </span><strong>v-memo=\"[selected === image.id]\"</strong></p><p><span style=\"color: rgb(206, 145, 120);\">    &gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;img :src=\"image.url\"&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;div&gt;{{image.title}}&lt;/h2&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;/li&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">    &lt;/ul&gt;`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(124, 166, 104);\">/*..*/</span></p><p>    }</p><p>}</p><p>We set the re-rendering to only if the condition check selected === image.id results differently from the previous check.</p>"
    },
    {
        "indexKey": 844,
        "lid": "a393a010-68cf-475e-b3cd-fccbf456310c",
        "word": "<p><strong>beforeMount</strong></p><p>Here the Vue render has created the component instance and compiled its template for rendering before the first render of the component.</p>",
        "tran": "<p><strong>mounted</strong></p><p>You can use this hook to perform additional side-effect calculations with the component’s DOM node.</p>",
        "en": "<p><strong>beforeMount</strong></p><p>Here the Vue render has created the component instance and compiled its template for rendering before the first render of the component.</p>",
        "cn": "<p><strong>mounted</strong></p><p>You can use this hook to perform additional side-effect calculations with the component’s DOM node.</p>"
    },
    {
        "indexKey": 832,
        "lid": "a3ddae8b-8504-4251-aaa8-c1c1df0e36f9",
        "word": "<p>Displaying Text Content with <strong>v-text</strong></p><p><br></p><p>use the v-text,Vue won’t update the text rendered if there are any changes.</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-text=\"text\"&gt;Placeholder text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">text:</span> <span style=\"color: rgb(206, 145, 120);\">`Hello World`</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p><p><br></p>",
        "tran": "",
        "en": "<p>Displaying Text Content with <strong>v-text</strong></p><p><br></p><p>use the v-text,Vue won’t update the text rendered if there are any changes.</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">createVue</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span></p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">App</span> <span style=\"color: rgb(212, 212, 212);\">=</span> {</p><p>    <span style=\"color: rgb(156, 220, 254);\">template:</span> <span style=\"color: rgb(206, 145, 120);\">`</span></p><p><span style=\"color: rgb(206, 145, 120);\">&lt;div v-text=\"text\"&gt;Placeholder text&lt;/div&gt;</span></p><p><span style=\"color: rgb(206, 145, 120);\">`</span>,</p><p>    <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>            <span style=\"color: rgb(156, 220, 254);\">text:</span> <span style=\"color: rgb(206, 145, 120);\">`Hello World`</span></p><p>        }</p><p>    }</p><p>}</p><p><span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">app</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(220, 220, 170);\">createApp</span>(<span style=\"color: rgb(156, 220, 254);\">App</span>)</p><p><span style=\"color: rgb(156, 220, 254);\">app</span>.<span style=\"color: rgb(220, 220, 170);\">mount</span>(<span style=\"color: rgb(206, 145, 120);\">'#app'</span>)</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 845,
        "lid": "a8e752a0-6ed6-4a97-84ba-bdceedcfaf09",
        "word": "<p><strong>beforeUpdate</strong></p><p>This hook runs after the update process starts, and you can still use it to modify the component’s state internally.</p><p><br></p><p><strong>updated</strong></p><p><br></p><p><strong>beforeUnmount</strong></p><p>At this point, the component’s DOM node $el is still available.</p><p><br></p>",
        "tran": "<p><strong>unmounted</strong></p><p>This hook can clean up additional observers or effects, such as DOM event listeners.</p><p><br></p><p>In Vue 2.x, you should use beforeDestroy and destroyed in place of beforeUnmount and mounted, respectively.</p><p><br></p><p>beforeUnmounted and unmounted hooks are not available in serverside rendering (SSR).</p>",
        "en": "<p><strong>beforeUpdate</strong></p><p>This hook runs after the update process starts, and you can still use it to modify the component’s state internally.</p><p><br></p><p><strong>updated</strong></p><p><br></p><p><strong>beforeUnmount</strong></p><p>At this point, the component’s DOM node $el is still available.</p><p><br></p>",
        "cn": "<p><strong>unmounted</strong></p><p>This hook can clean up additional observers or effects, such as DOM event listeners.</p><p><br></p><p>In Vue 2.x, you should use beforeDestroy and destroyed in place of beforeUnmount and mounted, respectively.</p><p><br></p><p>beforeUnmounted and unmounted hooks are not available in serverside rendering (SSR).</p>"
    },
    {
        "indexKey": 838,
        "lid": "ad8ecba7-677e-4682-aa17-c94f0f6c977d",
        "word": "<p>Using <strong>defineComponent() </strong>for TypeScript Support</p><p><br></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>{{ <span style=\"color: rgb(156, 220, 254);\">message</span> }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"MyMessageComponent\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"Welcome to Vue 3!\"</span>,</p><p>    };</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "tran": "",
        "en": "<p>Using <strong>defineComponent() </strong>for TypeScript Support</p><p><br></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>{{ <span style=\"color: rgb(156, 220, 254);\">message</span> }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"MyMessageComponent\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"Welcome to Vue 3!\"</span>,</p><p>    };</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "cn": ""
    },
    {
        "indexKey": 841,
        "lid": "b11b4139-b034-401f-a5fb-931412522425",
        "word": "<p>When using setup() hook, you can also combine with the <strong>h() render function</strong> to return a renderer for the component based on the props and context arguments.</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span>, <span style=\"color: rgb(156, 220, 254);\">h</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(220, 220, 170);\">setup</span>(<span style=\"color: rgb(156, 220, 254);\">props</span>, <span style=\"color: rgb(156, 220, 254);\">context</span>) {</p><p>        <span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">message</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'Welcome to Vue 3!'</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> () <span style=\"color: rgb(86, 156, 214);\">=&gt;</span> <span style=\"color: rgb(220, 220, 170);\">h</span>(<span style=\"color: rgb(206, 145, 120);\">'div'</span>, <span style=\"color: rgb(156, 220, 254);\">message</span>)</p><p>    }</p><p>})</p><p><br></p>",
        "tran": "",
        "en": "<p>When using setup() hook, you can also combine with the <strong>h() render function</strong> to return a renderer for the component based on the props and context arguments.</p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span>, <span style=\"color: rgb(156, 220, 254);\">h</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">'vue'</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>    <span style=\"color: rgb(220, 220, 170);\">setup</span>(<span style=\"color: rgb(156, 220, 254);\">props</span>, <span style=\"color: rgb(156, 220, 254);\">context</span>) {</p><p>        <span style=\"color: rgb(86, 156, 214);\">const</span> <span style=\"color: rgb(156, 220, 254);\">message</span> <span style=\"color: rgb(212, 212, 212);\">=</span> <span style=\"color: rgb(206, 145, 120);\">'Welcome to Vue 3!'</span></p><p>        <span style=\"color: rgb(197, 134, 192);\">return</span> () <span style=\"color: rgb(86, 156, 214);\">=&gt;</span> <span style=\"color: rgb(220, 220, 170);\">h</span>(<span style=\"color: rgb(206, 145, 120);\">'div'</span>, <span style=\"color: rgb(156, 220, 254);\">message</span>)</p><p>    }</p><p>})</p><p><br></p>",
        "cn": ""
    },
    {
        "indexKey": 842,
        "lid": "d4bc74be-cdba-4161-9229-48cca7f98e66",
        "word": "<p><strong>beforeCreate</strong></p><p>beforeCreate runs before the Vue renderer creates the component instance.&nbsp;Here the</p><p>Vue engine has initialized the component but hasn’t yet triggered the data() function or calculated any computed properties.Thus, there is no reactive data available.</p>",
        "tran": "",
        "en": "<p><strong>beforeCreate</strong></p><p>beforeCreate runs before the Vue renderer creates the component instance.&nbsp;Here the</p><p>Vue engine has initialized the component but hasn’t yet triggered the data() function or calculated any computed properties.Thus, there is no reactive data available.</p>",
        "cn": ""
    },
    {
        "indexKey": 846,
        "lid": "daaf0309-b5f5-41cf-a145-9753f55e1070",
        "word": "<p><strong>lifecycle hook</strong></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(156, 220, 254);\">message</span> }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your name\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"MyFistComponent\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"\"</span>,</p><p>    };</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">setup</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"setup hook triggered!\"</span>);</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {};</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeCreate</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeCreate hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">created</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"created hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeMount</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeMount hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">mounted</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"mounted hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeUpdate</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeUpdate hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">updated</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"updated hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeUnmount</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeUnmount hook triggered!\"</span>);</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "tran": "<p><strong>mounted </strong></p><p>When you need to perform any DOM manipulation or access the component’s DOM node this.$el.</p>",
        "en": "<p><strong>lifecycle hook</strong></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">h2</span> <span style=\"color: rgb(156, 220, 254);\">class</span>=<span style=\"color: rgb(206, 145, 120);\">\"heading\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span>I am {{ <span style=\"color: rgb(156, 220, 254);\">message</span> }}<span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">h2</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p>  <span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">input</span> <span style=\"color: rgb(156, 220, 254);\">v-model</span>=\"<span style=\"color: rgb(156, 220, 254);\">message</span>\" <span style=\"color: rgb(156, 220, 254);\">type</span>=<span style=\"color: rgb(206, 145, 120);\">\"text\"</span> <span style=\"color: rgb(156, 220, 254);\">placeholder</span>=<span style=\"color: rgb(206, 145, 120);\">\"Enter your name\"</span> /<span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">template</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(128, 128, 128);\">&lt;</span><span style=\"color: rgb(86, 156, 214);\">script</span> <span style=\"color: rgb(156, 220, 254);\">lang</span>=<span style=\"color: rgb(206, 145, 120);\">\"ts\"</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p><p><span style=\"color: rgb(197, 134, 192);\">import</span> { <span style=\"color: rgb(156, 220, 254);\">defineComponent</span> } <span style=\"color: rgb(197, 134, 192);\">from</span> <span style=\"color: rgb(206, 145, 120);\">\"vue\"</span>;</p><p><span style=\"color: rgb(197, 134, 192);\">export</span> <span style=\"color: rgb(197, 134, 192);\">default</span> <span style=\"color: rgb(220, 220, 170);\">defineComponent</span>({</p><p>  <span style=\"color: rgb(156, 220, 254);\">name:</span> <span style=\"color: rgb(206, 145, 120);\">\"MyFistComponent\"</span>,</p><p>  <span style=\"color: rgb(220, 220, 170);\">data</span>() {</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {</p><p>      <span style=\"color: rgb(156, 220, 254);\">message:</span> <span style=\"color: rgb(206, 145, 120);\">\"\"</span>,</p><p>    };</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">setup</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"setup hook triggered!\"</span>);</p><p>    <span style=\"color: rgb(197, 134, 192);\">return</span> {};</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeCreate</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeCreate hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">created</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"created hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeMount</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeMount hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">mounted</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"mounted hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeUpdate</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeUpdate hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">updated</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"updated hook triggered!\"</span>);</p><p>  },</p><p>  <span style=\"color: rgb(220, 220, 170);\">beforeUnmount</span>() {</p><p>    <span style=\"color: rgb(156, 220, 254);\">console</span>.<span style=\"color: rgb(220, 220, 170);\">log</span>(<span style=\"color: rgb(206, 145, 120);\">\"beforeUnmount hook triggered!\"</span>);</p><p>  },</p><p>});</p><p><span style=\"color: rgb(128, 128, 128);\">&lt;/</span><span style=\"color: rgb(86, 156, 214);\">script</span><span style=\"color: rgb(128, 128, 128);\">&gt;</span></p>",
        "cn": "<p><strong>mounted </strong></p><p>When you need to perform any DOM manipulation or access the component’s DOM node this.$el.</p>"
    },
    {
        "indexKey": 839,
        "lid": "df51a754-1ef8-45e2-b2bd-78cfec365357",
        "word": "<p><strong>Component Lifecycle Hooks</strong></p><p><strong>Initialize phase</strong></p><p>\tThe Vue renderer loads the component’s option configurations and prepares for the component instance creation.</p><p><strong>Creating phase</strong></p><p>\tThe Vue renderer creates the component instance. If the template requires compiling, there will be an additional step to compile it before moving forward to the next phase.</p><p><strong>First render phase</strong></p><p>\tThe Vue renderer creates and inserts the DOM nodes for the component in its DOM tree.</p><p><strong>Mounting phase</strong></p><p>\tThe component’s nested elements are already mounted and attached to the com‐ponent’s DOM tree, as seen in Figure 3-5. The Vue renderer then attaches the component to its parent container. From this phase onward, you have access to the component’s $el property, representing its DOM node.</p><p><strong>Updating phase</strong></p><p>\tOnly relevant if the component’s reactive data changes. Here the Vue renderer re-renders the DOM nodes for the component with the new data and performs a patch update. Similar to the mounting phase, the update process finishes with the child elements first and then the component itself.</p><p><strong>Unmounting phase</strong></p><p>\tThe Vue renderer detaches the component from the DOM and destroys the instance and all its reactive data effects. This phase is the last phase of the lifecycle, happening when the component is no longer in use in the application. Similar to the updating and mounting stages, a component can only unmount itself after all its children are unmounted.</p><p><br></p>",
        "tran": "",
        "en": "<p><strong>Component Lifecycle Hooks</strong></p><p><strong>Initialize phase</strong></p><p>\tThe Vue renderer loads the component’s option configurations and prepares for the component instance creation.</p><p><strong>Creating phase</strong></p><p>\tThe Vue renderer creates the component instance. If the template requires compiling, there will be an additional step to compile it before moving forward to the next phase.</p><p><strong>First render phase</strong></p><p>\tThe Vue renderer creates and inserts the DOM nodes for the component in its DOM tree.</p><p><strong>Mounting phase</strong></p><p>\tThe component’s nested elements are already mounted and attached to the com‐ponent’s DOM tree, as seen in Figure 3-5. The Vue renderer then attaches the component to its parent container. From this phase onward, you have access to the component’s $el property, representing its DOM node.</p><p><strong>Updating phase</strong></p><p>\tOnly relevant if the component’s reactive data changes. Here the Vue renderer re-renders the DOM nodes for the component with the new data and performs a patch update. Similar to the mounting phase, the update process finishes with the child elements first and then the component itself.</p><p><strong>Unmounting phase</strong></p><p>\tThe Vue renderer detaches the component from the DOM and destroys the instance and all its reactive data effects. This phase is the last phase of the lifecycle, happening when the component is no longer in use in the application. Similar to the updating and mounting stages, a component can only unmount itself after all its children are unmounted.</p><p><br></p>",
        "cn": ""
    }
]